{"ast":null,"code":"import _slicedToArray from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { StringNGrams } from '@tensorflow/tfjs-core';\nimport { stringNGramsImpl } from './StringNGrams_impl';\nexport function stringNGrams(args) {\n  var inputs = args.inputs,\n    backend = args.backend,\n    attrs = args.attrs;\n  var separator = attrs.separator,\n    nGramWidths = attrs.nGramWidths,\n    leftPad = attrs.leftPad,\n    rightPad = attrs.rightPad,\n    padWidth = attrs.padWidth,\n    preserveShortSequences = attrs.preserveShortSequences;\n  var data = inputs.data,\n    dataSplits = inputs.dataSplits;\n  var $data = backend.data.get(data.dataId).values;\n  var $dataSplits = backend.data.get(dataSplits.dataId).values;\n  var _stringNGramsImpl = stringNGramsImpl($data, $dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth, preserveShortSequences),\n    _stringNGramsImpl2 = _slicedToArray(_stringNGramsImpl, 2),\n    nGrams = _stringNGramsImpl2[0],\n    nGramsSplits = _stringNGramsImpl2[1];\n  return [backend.makeTensorInfo([nGrams.length], 'string', nGrams), backend.makeTensorInfo(dataSplits.shape, 'int32', nGramsSplits)];\n}\nexport var stringNGramsConfig = {\n  kernelName: StringNGrams,\n  backendName: 'cpu',\n  kernelFunc: stringNGrams\n};","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,YAAY,QAA0D,uBAAuB;AAI/H,SAAQC,gBAAgB,QAAO,qBAAqB;AAEpD,OAAM,SAAUC,YAAY,CAACC,IAI5B;EACC,IAAOC,MAAM,GAAoBD,IAAI,CAA9BC,MAAM;IAAEC,OAAO,GAAWF,IAAI,CAAtBE,OAAO;IAAEC,KAAK,GAAIH,IAAI,CAAbG,KAAK;EAC7B,IACEC,SAAS,GAMPD,KAAK,CANPC,SAAS;IACTC,WAAW,GAKTF,KAAK,CALPE,WAAW;IACXC,OAAO,GAILH,KAAK,CAJPG,OAAO;IACPC,QAAQ,GAGNJ,KAAK,CAHPI,QAAQ;IACRC,QAAQ,GAENL,KAAK,CAFPK,QAAQ;IACRC,sBAAsB,GACpBN,KAAK,CADPM,sBAAsB;EAExB,IAAOC,IAAI,GAAgBT,MAAM,CAA1BS,IAAI;IAAEC,UAAU,GAAIV,MAAM,CAApBU,UAAU;EACvB,IAAMC,KAAK,GAAGV,OAAO,CAACQ,IAAI,CAACG,GAAG,CAACH,IAAI,CAACI,MAAM,CAAC,CAACC,MAAsB;EAClE,IAAMC,WAAW,GAAGd,OAAO,CAACQ,IAAI,CAACG,GAAG,CAACF,UAAU,CAACG,MAAM,CAAC,CAACC,MAAoB;EAE5E,wBAA+BjB,gBAAgB,CAC3Cc,KAAK,EAAEI,WAAW,EAAEZ,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,EACvEC,sBAAsB,CAAC;IAAA;IAFpBQ,MAAM;IAAEC,YAAY;EAG3B,OAAO,CACLhB,OAAO,CAACiB,cAAc,CAAC,CAACF,MAAM,CAACG,MAAM,CAAC,EAAE,QAAQ,EAAEH,MAAM,CAAC,EACzDf,OAAO,CAACiB,cAAc,CAACR,UAAU,CAACU,KAAK,EAAE,OAAO,EAAEH,YAAY,CAAC,CAChE;AACH;AAEA,OAAO,IAAMI,kBAAkB,GAAiB;EAC9CC,UAAU,EAAE1B,YAAY;EACxB2B,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAE1B;CACb","names":["StringNGrams","stringNGramsImpl","stringNGrams","args","inputs","backend","attrs","separator","nGramWidths","leftPad","rightPad","padWidth","preserveShortSequences","data","dataSplits","$data","get","dataId","values","$dataSplits","nGrams","nGramsSplits","makeTensorInfo","length","shape","stringNGramsConfig","kernelName","backendName","kernelFunc"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-cpu\\src\\kernels\\StringNGrams.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringNGrams, StringNGramsAttrs, StringNGramsInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {stringNGramsImpl} from './StringNGrams_impl';\n\nexport function stringNGrams(args: {\n  inputs: StringNGramsInputs,\n  backend: MathBackendCPU,\n  attrs: StringNGramsAttrs\n}): [TensorInfo, TensorInfo] {\n  const {inputs, backend, attrs} = args;\n  const {\n    separator,\n    nGramWidths,\n    leftPad,\n    rightPad,\n    padWidth,\n    preserveShortSequences\n  } = attrs;\n  const {data, dataSplits} = inputs;\n  const $data = backend.data.get(data.dataId).values as Uint8Array[];\n  const $dataSplits = backend.data.get(dataSplits.dataId).values as Int32Array;\n\n  const [nGrams, nGramsSplits] = stringNGramsImpl(\n      $data, $dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth,\n      preserveShortSequences);\n  return [\n    backend.makeTensorInfo([nGrams.length], 'string', nGrams),\n    backend.makeTensorInfo(dataSplits.shape, 'int32', nGramsSplits),\n  ];\n}\n\nexport const stringNGramsConfig: KernelConfig = {\n  kernelName: StringNGrams,\n  backendName: 'cpu',\n  kernelFunc: stringNGrams as unknown as KernelFunc,\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}