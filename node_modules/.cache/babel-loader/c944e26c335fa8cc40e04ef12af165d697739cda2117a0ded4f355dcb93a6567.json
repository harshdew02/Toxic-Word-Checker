{"ast":null,"code":"import _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nexport var BatchNormPackedProgram = /*#__PURE__*/_createClass(function BatchNormPackedProgram(xShape, meanShape, varianceShape, offsetShape, scaleShape, varianceEpsilon) {\n  _classCallCheck(this, BatchNormPackedProgram);\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.variableNames = ['x', 'mean', 'variance'];\n  backend_util.assertAndGetBroadcastShape(xShape, meanShape);\n  backend_util.assertAndGetBroadcastShape(xShape, varianceShape);\n  var offsetSnippet = 'vec4(0.0)';\n  if (offsetShape != null) {\n    backend_util.assertAndGetBroadcastShape(xShape, offsetShape);\n    this.variableNames.push('offset');\n    offsetSnippet = 'getOffsetAtOutCoords()';\n  }\n  var scaleSnippet = 'vec4(1.0)';\n  if (scaleShape != null) {\n    backend_util.assertAndGetBroadcastShape(xShape, scaleShape);\n    this.variableNames.push('scale');\n    scaleSnippet = 'getScaleAtOutCoords()';\n  }\n  this.outputShape = xShape;\n  this.userCode = \"\\n      void main() {\\n        vec4 offset = \".concat(offsetSnippet, \";\\n        vec4 scale = \").concat(scaleSnippet, \";\\n\\n        vec4 x = getXAtOutCoords();\\n        vec4 mean = getMeanAtOutCoords();\\n        vec4 variance = getVarianceAtOutCoords();\\n\\n        vec4 inv = scale * inversesqrt(variance + vec4(\").concat(varianceEpsilon, \"));\\n\\n        setOutput((x - mean) * inv + offset);\\n      }\\n    \");\n});","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,QAAO,uBAAuB;AAGlD,WAAaC,sBAAsB,6BAOjC,gCACIC,MAAgB,EAAEC,SAAmB,EAAEC,aAAuB,EAC9DC,WAA0B,EAAEC,UAAyB,EACrDC,eAAuB;EAAA;EAN3B,iBAAY,GAAG,IAAI;EACnB,iBAAY,GAAG,IAAI;EAMjB,IAAI,CAACC,aAAa,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,UAAU,CAAC;EAC9CR,YAAY,CAACS,0BAA0B,CAACP,MAAM,EAAEC,SAAS,CAAC;EAC1DH,YAAY,CAACS,0BAA0B,CAACP,MAAM,EAAEE,aAAa,CAAC;EAE9D,IAAIM,aAAa,GAAG,WAAW;EAC/B,IAAIL,WAAW,IAAI,IAAI,EAAE;IACvBL,YAAY,CAACS,0BAA0B,CAACP,MAAM,EAAEG,WAAW,CAAC;IAC5D,IAAI,CAACG,aAAa,CAACG,IAAI,CAAC,QAAQ,CAAC;IACjCD,aAAa,GAAG,wBAAwB;;EAG1C,IAAIE,YAAY,GAAG,WAAW;EAC9B,IAAIN,UAAU,IAAI,IAAI,EAAE;IACtBN,YAAY,CAACS,0BAA0B,CAACP,MAAM,EAAEI,UAAU,CAAC;IAC3D,IAAI,CAACE,aAAa,CAACG,IAAI,CAAC,OAAO,CAAC;IAChCC,YAAY,GAAG,uBAAuB;;EAGxC,IAAI,CAACC,WAAW,GAAGX,MAAM;EACzB,IAAI,CAACY,QAAQ,0DAEOJ,aAAa,qCACdE,YAAY,8MAMsBL,eAAe,wEAInE;AACH,CAAC","names":["backend_util","BatchNormPackedProgram","xShape","meanShape","varianceShape","offsetShape","scaleShape","varianceEpsilon","variableNames","assertAndGetBroadcastShape","offsetSnippet","push","scaleSnippet","outputShape","userCode"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\batchnorm_packed_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class BatchNormPackedProgram implements GPGPUProgram {\n  variableNames: string[];\n  outputShape: number[];\n  userCode: string;\n  packedInputs = true;\n  packedOutput = true;\n\n  constructor(\n      xShape: number[], meanShape: number[], varianceShape: number[],\n      offsetShape: number[]|null, scaleShape: number[]|null,\n      varianceEpsilon: number) {\n    this.variableNames = ['x', 'mean', 'variance'];\n    backend_util.assertAndGetBroadcastShape(xShape, meanShape);\n    backend_util.assertAndGetBroadcastShape(xShape, varianceShape);\n\n    let offsetSnippet = 'vec4(0.0)';\n    if (offsetShape != null) {\n      backend_util.assertAndGetBroadcastShape(xShape, offsetShape);\n      this.variableNames.push('offset');\n      offsetSnippet = 'getOffsetAtOutCoords()';\n    }\n\n    let scaleSnippet = 'vec4(1.0)';\n    if (scaleShape != null) {\n      backend_util.assertAndGetBroadcastShape(xShape, scaleShape);\n      this.variableNames.push('scale');\n      scaleSnippet = 'getScaleAtOutCoords()';\n    }\n\n    this.outputShape = xShape;\n    this.userCode = `\n      void main() {\n        vec4 offset = ${offsetSnippet};\n        vec4 scale = ${scaleSnippet};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${varianceEpsilon}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}