{"ast":null,"code":"import _slicedToArray from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { isPromise } from './util_base';\n// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\nvar TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n *\n * @doc {heading: 'Environment'}\n */\nexport var Environment = /*#__PURE__*/function () {\n  // tslint:disable-next-line: no-any\n  function Environment(global) {\n    _classCallCheck(this, Environment);\n    this.global = global;\n    this.flags = {};\n    this.flagRegistry = {};\n    this.urlFlags = {};\n    // Jasmine spies on this in 'environment_test.ts'\n    this.getQueryParams = getQueryParams;\n    this.populateURLFlags();\n  }\n  _createClass(Environment, [{\n    key: \"setPlatform\",\n    value: function setPlatform(platformName, platform) {\n      if (this.platform != null) {\n        if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n          console.warn(\"Platform \".concat(this.platformName, \" has already been set. \") + \"Overwriting the platform with \".concat(platformName, \".\"));\n        }\n      }\n      this.platformName = platformName;\n      this.platform = platform;\n    }\n  }, {\n    key: \"registerFlag\",\n    value: function registerFlag(flagName, evaluationFn, setHook) {\n      this.flagRegistry[flagName] = {\n        evaluationFn: evaluationFn,\n        setHook: setHook\n      };\n      // Override the flag value from the URL. This has to happen here because\n      // the environment is initialized before flags get registered.\n      if (this.urlFlags[flagName] != null) {\n        var flagValue = this.urlFlags[flagName];\n        if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n          console.warn(\"Setting feature override from URL \".concat(flagName, \": \").concat(flagValue, \".\"));\n        }\n        this.set(flagName, flagValue);\n      }\n    }\n  }, {\n    key: \"getAsync\",\n    value: function () {\n      var _getAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(flagName) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(flagName in this.flags)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", this.flags[flagName]);\n            case 2:\n              _context.next = 4;\n              return this.evaluateFlag(flagName);\n            case 4:\n              this.flags[flagName] = _context.sent;\n              return _context.abrupt(\"return\", this.flags[flagName]);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getAsync(_x) {\n        return _getAsync.apply(this, arguments);\n      }\n      return getAsync;\n    }()\n  }, {\n    key: \"get\",\n    value: function get(flagName) {\n      if (flagName in this.flags) {\n        return this.flags[flagName];\n      }\n      var flagValue = this.evaluateFlag(flagName);\n      if (isPromise(flagValue)) {\n        throw new Error(\"Flag \".concat(flagName, \" cannot be synchronously evaluated. \") + \"Please use getAsync() instead.\");\n      }\n      this.flags[flagName] = flagValue;\n      return this.flags[flagName];\n    }\n  }, {\n    key: \"getNumber\",\n    value: function getNumber(flagName) {\n      return this.get(flagName);\n    }\n  }, {\n    key: \"getBool\",\n    value: function getBool(flagName) {\n      return this.get(flagName);\n    }\n  }, {\n    key: \"getFlags\",\n    value: function getFlags() {\n      return this.flags;\n    }\n    // For backwards compatibility.\n  }, {\n    key: \"features\",\n    get: function get() {\n      return this.flags;\n    }\n  }, {\n    key: \"set\",\n    value: function set(flagName, value) {\n      if (this.flagRegistry[flagName] == null) {\n        throw new Error(\"Cannot set flag \".concat(flagName, \" as it has not been registered.\"));\n      }\n      this.flags[flagName] = value;\n      if (this.flagRegistry[flagName].setHook != null) {\n        this.flagRegistry[flagName].setHook(value);\n      }\n    }\n  }, {\n    key: \"evaluateFlag\",\n    value: function evaluateFlag(flagName) {\n      if (this.flagRegistry[flagName] == null) {\n        throw new Error(\"Cannot evaluate flag '\".concat(flagName, \"': no evaluation function found.\"));\n      }\n      return this.flagRegistry[flagName].evaluationFn();\n    }\n  }, {\n    key: \"setFlags\",\n    value: function setFlags(flags) {\n      this.flags = Object.assign({}, flags);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.flags = {};\n      this.urlFlags = {};\n      this.populateURLFlags();\n    }\n  }, {\n    key: \"populateURLFlags\",\n    value: function populateURLFlags() {\n      var _this = this;\n      if (typeof this.global === 'undefined' || typeof this.global.location === 'undefined' || typeof this.global.location.search === 'undefined') {\n        return;\n      }\n      var urlParams = this.getQueryParams(this.global.location.search);\n      if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n        var keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n        keyValues.forEach(function (keyValue) {\n          var _keyValue$split = keyValue.split(':'),\n            _keyValue$split2 = _slicedToArray(_keyValue$split, 2),\n            key = _keyValue$split2[0],\n            value = _keyValue$split2[1];\n          _this.urlFlags[key] = parseValue(key, value);\n        });\n      }\n    }\n  }]);\n  return Environment;\n}();\nexport function getQueryParams(queryString) {\n  var params = {};\n  queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, function (s) {\n    for (var _len = arguments.length, t = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      t[_key - 1] = arguments[_key];\n    }\n    decodeParam(params, t[0], t[1]);\n    return t.join('=');\n  });\n  return params;\n}\nfunction decodeParam(params, name, value) {\n  params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\nfunction parseValue(flagName, value) {\n  value = value.toLowerCase();\n  if (value === 'true' || value === 'false') {\n    return value === 'true';\n  } else if (\"\".concat(+value) === value) {\n    return +value;\n  }\n  throw new Error(\"Could not parse value flag value \".concat(value, \" for flag \").concat(flagName, \".\"));\n}\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n *\n * @doc {heading: 'Environment'}\n */\nexport function env() {\n  return ENV;\n}\nexport var ENV = null;\nexport function setEnvironmentGlobal(environment) {\n  ENV = environment;\n}","map":{"version":3,"mappings":"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","names":["isPromise","TENSORFLOWJS_FLAGS_PREFIX","Environment","global","getQueryParams","populateURLFlags","platformName","platform","env","getBool","console","warn","flagName","evaluationFn","setHook","flagRegistry","urlFlags","flagValue","set","flags","evaluateFlag","Error","get","value","Object","assign","location","search","urlParams","keyValues","split","forEach","keyValue","key","parseValue","queryString","params","replace","s","t","decodeParam","join","name","decodeURIComponent","toLowerCase","ENV","setEnvironmentGlobal","environment"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-core\\src\\environment.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Platform} from './platforms/platform';\nimport {isPromise} from './util_base';\n\n// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\nconst TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n\ntype FlagValue = number|boolean;\ntype FlagEvaluationFn = (() => FlagValue)|(() => Promise<FlagValue>);\nexport type Flags = {\n  [featureName: string]: FlagValue\n};\nexport type FlagRegistryEntry = {\n  evaluationFn: FlagEvaluationFn;\n  setHook?: (value: FlagValue) => void;\n};\n\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n *\n * @doc {heading: 'Environment'}\n */\nexport class Environment {\n  private flags: Flags = {};\n  private flagRegistry: {[flagName: string]: FlagRegistryEntry} = {};\n\n  private urlFlags: Flags = {};\n\n  platformName: string;\n  platform: Platform;\n\n  // Jasmine spies on this in 'environment_test.ts'\n  getQueryParams = getQueryParams;\n\n  // tslint:disable-next-line: no-any\n  constructor(public global: any) {\n    this.populateURLFlags();\n  }\n\n  setPlatform(platformName: string, platform: Platform) {\n    if (this.platform != null) {\n      if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n        console.warn(\n            `Platform ${this.platformName} has already been set. ` +\n            `Overwriting the platform with ${platformName}.`);\n      }\n    }\n    this.platformName = platformName;\n    this.platform = platform;\n  }\n\n  registerFlag(\n      flagName: string, evaluationFn: FlagEvaluationFn,\n      setHook?: (value: FlagValue) => void) {\n    this.flagRegistry[flagName] = {evaluationFn, setHook};\n\n    // Override the flag value from the URL. This has to happen here because\n    // the environment is initialized before flags get registered.\n    if (this.urlFlags[flagName] != null) {\n      const flagValue = this.urlFlags[flagName];\n      if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n        console.warn(\n            `Setting feature override from URL ${flagName}: ${flagValue}.`);\n      }\n      this.set(flagName, flagValue);\n    }\n  }\n\n  async getAsync(flagName: string): Promise<FlagValue> {\n    if (flagName in this.flags) {\n      return this.flags[flagName];\n    }\n\n    this.flags[flagName] = await this.evaluateFlag(flagName);\n    return this.flags[flagName];\n  }\n\n  get(flagName: string): FlagValue {\n    if (flagName in this.flags) {\n      return this.flags[flagName];\n    }\n\n    const flagValue = this.evaluateFlag(flagName);\n    if (isPromise(flagValue)) {\n      throw new Error(\n          `Flag ${flagName} cannot be synchronously evaluated. ` +\n          `Please use getAsync() instead.`);\n    }\n\n    this.flags[flagName] = flagValue;\n    return this.flags[flagName];\n  }\n\n  getNumber(flagName: string): number {\n    return this.get(flagName) as number;\n  }\n\n  getBool(flagName: string): boolean {\n    return this.get(flagName) as boolean;\n  }\n\n  getFlags(): Flags {\n    return this.flags;\n  }\n  // For backwards compatibility.\n  get features(): Flags {\n    return this.flags;\n  }\n\n  set(flagName: string, value: FlagValue): void {\n    if (this.flagRegistry[flagName] == null) {\n      throw new Error(\n          `Cannot set flag ${flagName} as it has not been registered.`);\n    }\n    this.flags[flagName] = value;\n    if (this.flagRegistry[flagName].setHook != null) {\n      this.flagRegistry[flagName].setHook(value);\n    }\n  }\n\n  private evaluateFlag(flagName: string): FlagValue|Promise<FlagValue> {\n    if (this.flagRegistry[flagName] == null) {\n      throw new Error(\n          `Cannot evaluate flag '${flagName}': no evaluation function found.`);\n    }\n    return this.flagRegistry[flagName].evaluationFn();\n  }\n\n  setFlags(flags: Flags) {\n    this.flags = Object.assign({}, flags);\n  }\n\n  reset() {\n    this.flags = {};\n    this.urlFlags = {};\n    this.populateURLFlags();\n  }\n\n  private populateURLFlags(): void {\n    if (typeof this.global === 'undefined' ||\n        typeof this.global.location === 'undefined' ||\n        typeof this.global.location.search === 'undefined') {\n      return;\n    }\n\n    const urlParams = this.getQueryParams(this.global.location.search);\n    if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n      const keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n      keyValues.forEach(keyValue => {\n        const [key, value] = keyValue.split(':') as [string, string];\n        this.urlFlags[key] = parseValue(key, value);\n      });\n    }\n  }\n}\n\nexport function getQueryParams(queryString: string): {[key: string]: string} {\n  const params = {};\n  queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, (s, ...t) => {\n    decodeParam(params, t[0], t[1]);\n    return t.join('=');\n  });\n  return params;\n}\n\nfunction decodeParam(\n    params: {[key: string]: string}, name: string, value?: string) {\n  params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\n\nfunction parseValue(flagName: string, value: string): FlagValue {\n  value = value.toLowerCase();\n  if (value === 'true' || value === 'false') {\n    return value === 'true';\n  } else if (`${+ value}` === value) {\n    return +value;\n  }\n  throw new Error(\n      `Could not parse value flag value ${value} for flag ${flagName}.`);\n}\n\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n *\n * @doc {heading: 'Environment'}\n */\nexport function env() {\n  return ENV;\n}\n\nexport let ENV: Environment = null;\nexport function setEnvironmentGlobal(environment: Environment) {\n  ENV = environment;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}