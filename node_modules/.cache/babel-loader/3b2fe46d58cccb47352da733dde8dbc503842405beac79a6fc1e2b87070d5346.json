{"ast":null,"code":"import _createForOfIteratorHelper from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n/**\n * Count the elements in an Array of LayerVariables.\n *\n * @param weights: The LayerVariables of which the constituent numbers are to\n *   be counted.\n * @returns A count of the elements in all the LayerVariables\n */\nexport function countParamsInWeights(weights) {\n  var count = 0;\n  var _iterator = _createForOfIteratorHelper(weights),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var weight = _step.value;\n      if (weight.shape.length === 0) {\n        count += 1;\n      } else {\n        count += weight.shape.reduce(function (a, b) {\n          return a * b;\n        });\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return count;\n}","map":{"version":3,"mappings":";AAAA;;;;;;;;;AAYA;;;;;;;AAOA,OAAM,SAAUA,oBAAoB,CAACC,OAAwB;EAC3D,IAAIC,KAAK,GAAG,CAAC;EAAC,2CACOD,OAAO;IAAA;EAAA;IAA5B,oDAA8B;MAAA,IAAnBE,MAAM;MACf,IAAIA,MAAM,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;QAC7BH,KAAK,IAAI,CAAC;OACX,MAAM;QACLA,KAAK,IAAIC,MAAM,CAACC,KAAK,CAACE,MAAM,CAAC,UAACC,CAAC,EAAEC,CAAC;UAAA,OAAKD,CAAC,GAAGC,CAAC;QAAA,EAAC;;;EAEhD;IAAA;EAAA;IAAA;EAAA;EACD,OAAON,KAAK;AACd","names":["countParamsInWeights","weights","count","weight","shape","length","reduce","a","b"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-layers\\src\\utils\\variable_utils.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {LayerVariable} from '../variables';\n\n/**\n * Count the elements in an Array of LayerVariables.\n *\n * @param weights: The LayerVariables of which the constituent numbers are to\n *   be counted.\n * @returns A count of the elements in all the LayerVariables\n */\nexport function countParamsInWeights(weights: LayerVariable[]): number {\n  let count = 0;\n  for (const weight of weights) {\n    if (weight.shape.length === 0) {\n      count += 1;\n    } else {\n      count += weight.shape.reduce((a, b) => a * b);\n    }\n  }\n  return count;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}