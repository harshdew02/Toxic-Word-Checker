{"ast":null,"code":"import _slicedToArray from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Prod, sumOutType, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { prodImplCPU } from '../kernel_utils/shared';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function prod(args) {\n  var inputs = args.inputs,\n    backend = args.backend,\n    attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis,\n    keepDims = attrs.keepDims;\n  var xRank = x.shape.length;\n  var toDispose = [];\n  var origAxes = util.parseAxisParam(axis, x.shape);\n  var axes = origAxes;\n  var permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  var permutedX = x;\n  if (permutedAxes != null) {\n    permutedX = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    toDispose.push(permutedX);\n  }\n  backend_util.assertAxesAreInnerMostDims('prod', axes, xRank);\n  var res;\n  if (backend.shouldExecuteOnCPU([permutedX])) {\n    var xVals = backend.texData.get(permutedX.dataId).values;\n    var _prodImplCPU = prodImplCPU(permutedX.shape, permutedX.dtype, xVals, axes),\n      outVals = _prodImplCPU.outVals,\n      outShape = _prodImplCPU.outShape,\n      outDtype = _prodImplCPU.outDtype;\n    res = backend.makeTensorInfo(outShape, outDtype, outVals);\n  } else {\n    var _backend_util$compute = backend_util.computeOutAndReduceShapes(permutedX.shape, axes),\n      _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n      _outShape = _backend_util$compute2[0],\n      reduceShape = _backend_util$compute2[1];\n    var inSize = util.sizeFromShape(reduceShape);\n    var a2D = reshape({\n      inputs: {\n        x: permutedX\n      },\n      backend: backend,\n      attrs: {\n        shape: [-1, inSize]\n      }\n    });\n    var outputDType = sumOutType(x.dtype);\n    var reduced = reduce(a2D, outputDType, 'prod', backend);\n    res = reshape({\n      inputs: {\n        x: reduced\n      },\n      backend: backend,\n      attrs: {\n        shape: _outShape\n      }\n    });\n    toDispose.push(a2D);\n    toDispose.push(reduced);\n  }\n  if (keepDims) {\n    toDispose.push(res);\n    var newShape = backend_util.expandShapeToKeepDim(res.shape, origAxes);\n    res = reshape({\n      inputs: {\n        x: res\n      },\n      backend: backend,\n      attrs: {\n        shape: newShape\n      }\n    });\n  }\n  toDispose.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return res;\n}\nexport var prodConfig = {\n  kernelName: Prod,\n  backendName: 'webgl',\n  kernelFunc: prod\n};","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,EAA4BC,IAAI,EAAyBC,UAAU,EAA0BC,IAAI,QAAO,uBAAuB;AAGnJ,SAAQC,MAAM,QAAO,wBAAwB;AAC7C,SAAQC,WAAW,QAAO,wBAAwB;AAElD,SAAQC,OAAO,QAAO,WAAW;AACjC,SAAQC,SAAS,QAAO,aAAa;AAErC,OAAM,SAAUC,IAAI,CAChBC,IAAuE;EAEzE,IAAOC,MAAM,GAAoBD,IAAI,CAA9BC,MAAM;IAAEC,OAAO,GAAWF,IAAI,CAAtBE,OAAO;IAAEC,KAAK,GAAIH,IAAI,CAAbG,KAAK;EAC7B,IAAOC,CAAC,GAAIH,MAAM,CAAXG,CAAC;EACR,IAAOC,IAAI,GAAcF,KAAK,CAAvBE,IAAI;IAAEC,QAAQ,GAAIH,KAAK,CAAjBG,QAAQ;EAErB,IAAMC,KAAK,GAAGH,CAAC,CAACI,KAAK,CAACC,MAAM;EAC5B,IAAMC,SAAS,GAAG,EAAE;EAEpB,IAAMC,QAAQ,GAAGjB,IAAI,CAACkB,cAAc,CAACP,IAAI,EAAED,CAAC,CAACI,KAAK,CAAC;EACnD,IAAIK,IAAI,GAAGF,QAAQ;EACnB,IAAMG,YAAY,GAAGvB,YAAY,CAACwB,kBAAkB,CAACF,IAAI,EAAEN,KAAK,CAAC;EACjE,IAAIS,SAAS,GAAGZ,CAAC;EACjB,IAAIU,YAAY,IAAI,IAAI,EAAE;IACxBE,SAAS,GAAGlB,SAAS,CAAC;MAACG,MAAM,EAAE;QAACG,CAAC,EAADA;MAAC,CAAC;MAAEF,OAAO,EAAPA,OAAO;MAAEC,KAAK,EAAE;QAACc,IAAI,EAAEH;MAAY;IAAC,CAAC,CAAC;IAC1ED,IAAI,GAAGtB,YAAY,CAAC2B,gBAAgB,CAACL,IAAI,CAACJ,MAAM,EAAEF,KAAK,CAAC;IACxDG,SAAS,CAACS,IAAI,CAACH,SAAS,CAAC;;EAG3BzB,YAAY,CAAC6B,0BAA0B,CAAC,MAAM,EAAEP,IAAI,EAAEN,KAAK,CAAC;EAE5D,IAAIc,GAAG;EACP,IAAInB,OAAO,CAACoB,kBAAkB,CAAC,CAACN,SAAS,CAAC,CAAC,EAAE;IAC3C,IAAMO,KAAK,GAAGrB,OAAO,CAACsB,OAAO,CAACC,GAAG,CAACT,SAAS,CAACU,MAAM,CAAC,CAACC,MAAoB;IACxE,mBACI/B,WAAW,CAACoB,SAAS,CAACR,KAAK,EAAEQ,SAAS,CAACY,KAAK,EAAEL,KAAK,EAAEV,IAAI,CAAC;MADvDgB,OAAO,gBAAPA,OAAO;MAAEC,QAAQ,gBAARA,QAAQ;MAAEC,QAAQ,gBAARA,QAAQ;IAElCV,GAAG,GAAGnB,OAAO,CAAC8B,cAAc,CAACF,QAAQ,EAAEC,QAAQ,EAAEF,OAAO,CAAC;GAC1D,MAAM;IACL,4BACItC,YAAY,CAAC0C,yBAAyB,CAACjB,SAAS,CAACR,KAAK,EAAEK,IAAI,CAAC;MAAA;MAD1DiB,SAAQ;MAAEI,WAAW;IAE5B,IAAMC,MAAM,GAAGzC,IAAI,CAAC0C,aAAa,CAACF,WAAW,CAAC;IAC9C,IAAMG,GAAG,GAAGxC,OAAO,CACf;MAACI,MAAM,EAAE;QAACG,CAAC,EAAEY;MAAS,CAAC;MAAEd,OAAO,EAAPA,OAAO;MAAEC,KAAK,EAAE;QAACK,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE2B,MAAM;MAAC;IAAC,CAAC,CAAC;IACpE,IAAMG,WAAW,GAAG7C,UAAU,CAACW,CAAC,CAACwB,KAAK,CAAC;IACvC,IAAMW,OAAO,GAAG5C,MAAM,CAAC0C,GAAG,EAAEC,WAAW,EAAE,MAAM,EAAEpC,OAAO,CAAC;IACzDmB,GAAG,GAAGxB,OAAO,CAAC;MAACI,MAAM,EAAE;QAACG,CAAC,EAAEmC;MAAO,CAAC;MAAErC,OAAO,EAAPA,OAAO;MAAEC,KAAK,EAAE;QAACK,KAAK,EAAEsB;MAAQ;IAAC,CAAC,CAAC;IAExEpB,SAAS,CAACS,IAAI,CAACkB,GAAG,CAAC;IACnB3B,SAAS,CAACS,IAAI,CAACoB,OAAO,CAAC;;EAGzB,IAAIjC,QAAQ,EAAE;IACZI,SAAS,CAACS,IAAI,CAACE,GAAG,CAAC;IACnB,IAAMmB,QAAQ,GAAGjD,YAAY,CAACkD,oBAAoB,CAACpB,GAAG,CAACb,KAAK,EAAEG,QAAQ,CAAC;IACvEU,GAAG,GAAGxB,OAAO,CAAC;MAACI,MAAM,EAAE;QAACG,CAAC,EAAEiB;MAAG,CAAC;MAAEnB,OAAO,EAAPA,OAAO;MAAEC,KAAK,EAAE;QAACK,KAAK,EAAEgC;MAAQ;IAAC,CAAC,CAAC;;EAGtE9B,SAAS,CAACgC,OAAO,CAAC,WAAC;IAAA,OAAIxC,OAAO,CAACyC,6BAA6B,CAACC,CAAC,CAAC;EAAA,EAAC;EAEhE,OAAOvB,GAAG;AACZ;AAEA,OAAO,IAAMwB,UAAU,GAAiB;EACtCC,UAAU,EAAEtD,IAAI;EAChBuD,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAEjD;CACb","names":["backend_util","Prod","sumOutType","util","reduce","prodImplCPU","reshape","transpose","prod","args","inputs","backend","attrs","x","axis","keepDims","xRank","shape","length","toDispose","origAxes","parseAxisParam","axes","permutedAxes","getAxesPermutation","permutedX","perm","getInnerMostAxes","push","assertAxesAreInnerMostDims","res","shouldExecuteOnCPU","xVals","texData","get","dataId","values","dtype","outVals","outShape","outDtype","makeTensorInfo","computeOutAndReduceShapes","reduceShape","inSize","sizeFromShape","a2D","outputDType","reduced","newShape","expandShapeToKeepDim","forEach","disposeIntermediateTensorInfo","t","prodConfig","kernelName","backendName","kernelFunc"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\kernels\\Prod.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Prod, ProdAttrs, ProdInputs, sumOutType, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {reduce} from '../kernel_utils/reduce';\nimport {prodImplCPU} from '../kernel_utils/shared';\n\nimport {reshape} from './Reshape';\nimport {transpose} from './Transpose';\n\nexport function prod(\n    args: {inputs: ProdInputs, backend: MathBackendWebGL, attrs: ProdAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, keepDims} = attrs;\n\n  const xRank = x.shape.length;\n  const toDispose = [];\n\n  const origAxes = util.parseAxisParam(axis, x.shape);\n  let axes = origAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let permutedX = x;\n  if (permutedAxes != null) {\n    permutedX = transpose({inputs: {x}, backend, attrs: {perm: permutedAxes}});\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    toDispose.push(permutedX);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('prod', axes, xRank);\n\n  let res;\n  if (backend.shouldExecuteOnCPU([permutedX])) {\n    const xVals = backend.texData.get(permutedX.dataId).values as TypedArray;\n    const {outVals, outShape, outDtype} =\n        prodImplCPU(permutedX.shape, permutedX.dtype, xVals, axes);\n    res = backend.makeTensorInfo(outShape, outDtype, outVals);\n  } else {\n    const [outShape, reduceShape] =\n        backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n    const inSize = util.sizeFromShape(reduceShape);\n    const a2D = reshape(\n        {inputs: {x: permutedX}, backend, attrs: {shape: [-1, inSize]}});\n    const outputDType = sumOutType(x.dtype);\n    const reduced = reduce(a2D, outputDType, 'prod', backend);\n    res = reshape({inputs: {x: reduced}, backend, attrs: {shape: outShape}});\n\n    toDispose.push(a2D);\n    toDispose.push(reduced);\n  }\n\n  if (keepDims) {\n    toDispose.push(res);\n    const newShape = backend_util.expandShapeToKeepDim(res.shape, origAxes);\n    res = reshape({inputs: {x: res}, backend, attrs: {shape: newShape}});\n  }\n\n  toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n\n  return res;\n}\n\nexport const prodConfig: KernelConfig = {\n  kernelName: Prod,\n  backendName: 'webgl',\n  kernelFunc: prod as unknown as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}