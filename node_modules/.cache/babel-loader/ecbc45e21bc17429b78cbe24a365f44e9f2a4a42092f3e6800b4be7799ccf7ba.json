{"ast":null,"code":"import _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var IORouterRegistry = /*#__PURE__*/function () {\n  function IORouterRegistry() {\n    _classCallCheck(this, IORouterRegistry);\n    this.saveRouters = [];\n    this.loadRouters = [];\n  }\n  _createClass(IORouterRegistry, null, [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (IORouterRegistry.instance == null) {\n        IORouterRegistry.instance = new IORouterRegistry();\n      }\n      return IORouterRegistry.instance;\n    }\n    /**\n     * Register a save-handler router.\n     *\n     * @param saveRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `save` method defined or `null`.\n     */\n  }, {\n    key: \"registerSaveRouter\",\n    value: function registerSaveRouter(saveRouter) {\n      IORouterRegistry.getInstance().saveRouters.push(saveRouter);\n    }\n    /**\n     * Register a load-handler router.\n     *\n     * @param loadRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `load` method defined or `null`.\n     */\n  }, {\n    key: \"registerLoadRouter\",\n    value: function registerLoadRouter(loadRouter) {\n      IORouterRegistry.getInstance().loadRouters.push(loadRouter);\n    }\n    /**\n     * Look up IOHandler for saving, given a URL-like string.\n     *\n     * @param url\n     * @returns If only one match is found, an instance of IOHandler with the\n     * `save` method defined. If no match is found, `null`.\n     * @throws Error, if more than one match is found.\n     */\n  }, {\n    key: \"getSaveHandlers\",\n    value: function getSaveHandlers(url) {\n      return IORouterRegistry.getHandlers(url, 'save');\n    }\n    /**\n     * Look up IOHandler for loading, given a URL-like string.\n     *\n     * @param url\n     * @param loadOptions Optional, custom load options.\n     * @returns All valid handlers for `url`, given the currently registered\n     *   handler routers.\n     */\n  }, {\n    key: \"getLoadHandlers\",\n    value: function getLoadHandlers(url, loadOptions) {\n      return IORouterRegistry.getHandlers(url, 'load', loadOptions);\n    }\n  }, {\n    key: \"getHandlers\",\n    value: function getHandlers(url, handlerType, loadOptions) {\n      var validHandlers = [];\n      var routers = handlerType === 'load' ? IORouterRegistry.getInstance().loadRouters : IORouterRegistry.getInstance().saveRouters;\n      routers.forEach(function (router) {\n        var handler = router(url, loadOptions);\n        if (handler !== null) {\n          validHandlers.push(handler);\n        }\n      });\n      return validHandlers;\n    }\n  }]);\n  return IORouterRegistry;\n}();\nexport var registerSaveRouter = function registerSaveRouter(loudRouter) {\n  return IORouterRegistry.registerSaveRouter(loudRouter);\n};\nexport var registerLoadRouter = function registerLoadRouter(loudRouter) {\n  return IORouterRegistry.registerLoadRouter(loudRouter);\n};\nexport var getSaveHandlers = function getSaveHandlers(url) {\n  return IORouterRegistry.getSaveHandlers(url);\n};\nexport var getLoadHandlers = function getLoadHandlers(url, loadOptions) {\n  return IORouterRegistry.getLoadHandlers(url, loadOptions);\n};","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;AAsBA,WAAaA,gBAAgB;EAO3B;IAAA;IACE,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,WAAW,GAAG,EAAE;EACvB;EAAC;IAAA;IAAA,OAEO,uBAAkB;MACxB,IAAIF,gBAAgB,CAACG,QAAQ,IAAI,IAAI,EAAE;QACrCH,gBAAgB,CAACG,QAAQ,GAAG,IAAIH,gBAAgB,EAAE;;MAEpD,OAAOA,gBAAgB,CAACG,QAAQ;IAClC;IAEA;;;;;;EAAA;IAAA;IAAA,OAMA,4BAA0BC,UAAoB;MAC5CJ,gBAAgB,CAACK,WAAW,EAAE,CAACJ,WAAW,CAACK,IAAI,CAACF,UAAU,CAAC;IAC7D;IAEA;;;;;;EAAA;IAAA;IAAA,OAMA,4BAA0BG,UAAoB;MAC5CP,gBAAgB,CAACK,WAAW,EAAE,CAACH,WAAW,CAACI,IAAI,CAACC,UAAU,CAAC;IAC7D;IAEA;;;;;;;;EAAA;IAAA;IAAA,OAQA,yBAAuBC,GAAoB;MACzC,OAAOR,gBAAgB,CAACS,WAAW,CAACD,GAAG,EAAE,MAAM,CAAC;IAClD;IAEA;;;;;;;;EAAA;IAAA;IAAA,OAQA,yBAAuBA,GAAoB,EAAEE,WAAyB;MAEpE,OAAOV,gBAAgB,CAACS,WAAW,CAACD,GAAG,EAAE,MAAM,EAAEE,WAAW,CAAC;IAC/D;EAAC;IAAA;IAAA,OAEO,qBACJF,GAAoB,EAAEG,WAA0B,EAChDD,WAAyB;MAC3B,IAAME,aAAa,GAAgB,EAAE;MACrC,IAAMC,OAAO,GAAGF,WAAW,KAAK,MAAM,GAClCX,gBAAgB,CAACK,WAAW,EAAE,CAACH,WAAW,GAC1CF,gBAAgB,CAACK,WAAW,EAAE,CAACJ,WAAW;MAC9CY,OAAO,CAACC,OAAO,CAAC,gBAAM,EAAG;QACvB,IAAMC,OAAO,GAAGC,MAAM,CAACR,GAAG,EAAEE,WAAW,CAAC;QACxC,IAAIK,OAAO,KAAK,IAAI,EAAE;UACpBH,aAAa,CAACN,IAAI,CAACS,OAAO,CAAC;;MAE/B,CAAC,CAAC;MACF,OAAOH,aAAa;IACtB;EAAC;EAAA;AAAA;AAGH,OAAO,IAAMK,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIC,UAAoB;EAAA,OACnDlB,gBAAgB,CAACiB,kBAAkB,CAACC,UAAU,CAAC;AAAA;AACnD,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAID,UAAoB;EAAA,OACnDlB,gBAAgB,CAACmB,kBAAkB,CAACD,UAAU,CAAC;AAAA;AACnD,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAe,CAAIZ,GAAoB;EAAA,OAChDR,gBAAgB,CAACoB,eAAe,CAACZ,GAAG,CAAC;AAAA;AACzC,OAAO,IAAMa,eAAe,GACxB,SADSA,eAAe,CACvBb,GAAoB,EAAEE,WAAyB;EAAA,OAC5CV,gBAAgB,CAACqB,eAAe,CAACb,GAAG,EAAEE,WAAW,CAAC;AAAA","names":["IORouterRegistry","saveRouters","loadRouters","instance","saveRouter","getInstance","push","loadRouter","url","getHandlers","loadOptions","handlerType","validHandlers","routers","forEach","handler","router","registerSaveRouter","loudRouter","registerLoadRouter","getSaveHandlers","getLoadHandlers"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\Toxic-Word-Checker\\node_modules\\@tensorflow\\tfjs-core\\src\\io\\router_registry.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IOHandler, LoadOptions} from './types';\n\nexport type IORouter = (url: string|string[], loadOptions?: LoadOptions) =>\n    IOHandler;\n\nexport class IORouterRegistry {\n  // Singleton instance.\n  private static instance: IORouterRegistry;\n\n  private saveRouters: IORouter[];\n  private loadRouters: IORouter[];\n\n  private constructor() {\n    this.saveRouters = [];\n    this.loadRouters = [];\n  }\n\n  private static getInstance(): IORouterRegistry {\n    if (IORouterRegistry.instance == null) {\n      IORouterRegistry.instance = new IORouterRegistry();\n    }\n    return IORouterRegistry.instance;\n  }\n\n  /**\n   * Register a save-handler router.\n   *\n   * @param saveRouter A function that maps a URL-like string onto an instance\n   * of `IOHandler` with the `save` method defined or `null`.\n   */\n  static registerSaveRouter(saveRouter: IORouter) {\n    IORouterRegistry.getInstance().saveRouters.push(saveRouter);\n  }\n\n  /**\n   * Register a load-handler router.\n   *\n   * @param loadRouter A function that maps a URL-like string onto an instance\n   * of `IOHandler` with the `load` method defined or `null`.\n   */\n  static registerLoadRouter(loadRouter: IORouter) {\n    IORouterRegistry.getInstance().loadRouters.push(loadRouter);\n  }\n\n  /**\n   * Look up IOHandler for saving, given a URL-like string.\n   *\n   * @param url\n   * @returns If only one match is found, an instance of IOHandler with the\n   * `save` method defined. If no match is found, `null`.\n   * @throws Error, if more than one match is found.\n   */\n  static getSaveHandlers(url: string|string[]): IOHandler[] {\n    return IORouterRegistry.getHandlers(url, 'save');\n  }\n\n  /**\n   * Look up IOHandler for loading, given a URL-like string.\n   *\n   * @param url\n   * @param loadOptions Optional, custom load options.\n   * @returns All valid handlers for `url`, given the currently registered\n   *   handler routers.\n   */\n  static getLoadHandlers(url: string|string[], loadOptions?: LoadOptions):\n      IOHandler[] {\n    return IORouterRegistry.getHandlers(url, 'load', loadOptions);\n  }\n\n  private static getHandlers(\n      url: string|string[], handlerType: 'save'|'load',\n      loadOptions?: LoadOptions): IOHandler[] {\n    const validHandlers: IOHandler[] = [];\n    const routers = handlerType === 'load' ?\n        IORouterRegistry.getInstance().loadRouters :\n        IORouterRegistry.getInstance().saveRouters;\n    routers.forEach(router => {\n      const handler = router(url, loadOptions);\n      if (handler !== null) {\n        validHandlers.push(handler);\n      }\n    });\n    return validHandlers;\n  }\n}\n\nexport const registerSaveRouter = (loudRouter: IORouter) =>\n    IORouterRegistry.registerSaveRouter(loudRouter);\nexport const registerLoadRouter = (loudRouter: IORouter) =>\n    IORouterRegistry.registerLoadRouter(loudRouter);\nexport const getSaveHandlers = (url: string|string[]) =>\n    IORouterRegistry.getSaveHandlers(url);\nexport const getLoadHandlers =\n    (url: string|string[], loadOptions?: LoadOptions) =>\n        IORouterRegistry.getLoadHandlers(url, loadOptions);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}