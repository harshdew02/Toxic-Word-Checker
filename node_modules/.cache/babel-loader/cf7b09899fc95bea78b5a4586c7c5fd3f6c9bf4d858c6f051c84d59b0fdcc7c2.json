{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { dispose as _dispose, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { zerosLike } from '../ops/zeros_like';\nimport { SGDOptimizer } from './sgd_optimizer';\n/** @doclink Optimizer */\nexport var MomentumOptimizer = /*#__PURE__*/function (_SGDOptimizer) {\n  _inherits(MomentumOptimizer, _SGDOptimizer);\n  var _super = _createSuper(MomentumOptimizer);\n  function MomentumOptimizer(learningRate, momentum) {\n    var _this;\n    var useNesterov = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    _classCallCheck(this, MomentumOptimizer);\n    _this = _super.call(this, learningRate);\n    _this.learningRate = learningRate;\n    _this.momentum = momentum;\n    _this.useNesterov = useNesterov;\n    _this.accumulations = [];\n    _this.m = scalar(_this.momentum);\n    return _this;\n  }\n  /** @nocollapse */\n  // Name matters for Python compatibility.\n  _createClass(MomentumOptimizer, [{\n    key: \"applyGradients\",\n    value: function applyGradients(variableGradients) {\n      var _this2 = this;\n      var variableNames = Array.isArray(variableGradients) ? variableGradients.map(function (item) {\n        return item.name;\n      }) : Object.keys(variableGradients);\n      variableNames.forEach(function (name, i) {\n        var value = ENGINE.registeredVariables[name];\n        if (_this2.accumulations[i] == null) {\n          var trainable = false;\n          _this2.accumulations[i] = {\n            originalName: \"\".concat(name, \"/momentum\"),\n            variable: tidy(function () {\n              return zerosLike(value).variable(trainable);\n            })\n          };\n        }\n        var accumulation = _this2.accumulations[i].variable;\n        var gradient = Array.isArray(variableGradients) ? variableGradients[i].tensor : variableGradients[name];\n        if (gradient == null) {\n          return;\n        }\n        tidy(function () {\n          var newValue;\n          var newAccumulation = add(mul(_this2.m, accumulation), gradient);\n          if (_this2.useNesterov) {\n            newValue = add(mul(_this2.c, add(gradient, mul(newAccumulation, _this2.m))), value);\n          } else {\n            newValue = add(mul(_this2.c, newAccumulation), value);\n          }\n          accumulation.assign(newAccumulation);\n          value.assign(newValue);\n        });\n      });\n      this.incrementIterations();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.m.dispose();\n      if (this.accumulations != null) {\n        _dispose(this.accumulations.map(function (v) {\n          return v.variable;\n        }));\n      }\n    }\n    /**\n     * Sets the momentum of the optimizer.\n     *\n     * @param momentum\n     */\n  }, {\n    key: \"setMomentum\",\n    value: function setMomentum(momentum) {\n      this.momentum = momentum;\n    }\n  }, {\n    key: \"getWeights\",\n    value: function () {\n      var _getWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.saveIterations();\n            case 2:\n              _context.t0 = _context.sent;\n              return _context.abrupt(\"return\", [_context.t0].concat(this.accumulations.map(function (v) {\n                return {\n                  name: v.originalName,\n                  tensor: v.variable\n                };\n              })));\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getWeights() {\n        return _getWeights.apply(this, arguments);\n      }\n      return getWeights;\n    }()\n  }, {\n    key: \"setWeights\",\n    value: function () {\n      var _setWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(weightValues) {\n        var trainable;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.extractIterations(weightValues);\n            case 2:\n              weightValues = _context2.sent;\n              trainable = false;\n              this.accumulations = weightValues.map(function (v) {\n                return {\n                  originalName: v.name,\n                  variable: v.tensor.variable(trainable)\n                };\n              });\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function setWeights(_x) {\n        return _setWeights.apply(this, arguments);\n      }\n      return setWeights;\n    }()\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        'learningRate': this.learningRate,\n        'momentum': this.momentum,\n        'useNesterov': this.useNesterov\n      };\n    }\n    /** @nocollapse */\n  }], [{\n    key: \"className\",\n    get: function get() {\n      // Name matters for Python compatibility.\n      // This is a getter instead of a property because when it's a property, it\n      // prevents the entire class from being tree-shaken.\n      return 'Momentum';\n    }\n  }, {\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls(config['learningRate'], config['momentum'], config['useNesterov']);\n    }\n  }]);\n  return MomentumOptimizer;\n}(SGDOptimizer);","map":{"version":3,"mappings":"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","names":["ENGINE","dispose","tidy","add","mul","scalar","zerosLike","SGDOptimizer","MomentumOptimizer","learningRate","momentum","useNesterov","m","variableGradients","variableNames","Array","isArray","map","item","name","Object","keys","forEach","i","value","registeredVariables","accumulations","trainable","originalName","variable","accumulation","gradient","tensor","newValue","newAccumulation","c","assign","incrementIterations","v","saveIterations","concat","weightValues","extractIterations","cls","config"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\Toxic-Word-Checker\\node_modules\\@tensorflow\\tfjs-core\\src\\optimizers\\momentum_optimizer.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {add} from '../ops/add';\nimport {mul} from '../ops/mul';\nimport {scalar} from '../ops/scalar';\nimport {zerosLike} from '../ops/zeros_like';\nimport {ConfigDict, Serializable, SerializableConstructor} from '../serialization';\nimport {Scalar, Tensor} from '../tensor';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\n\nimport {OptimizerVariable} from './optimizer';\nimport {SGDOptimizer} from './sgd_optimizer';\n\n/** @doclink Optimizer */\nexport class MomentumOptimizer extends SGDOptimizer {\n  /** @nocollapse */\n  // Name matters for Python compatibility.\n  static override get className() {\n    // Name matters for Python compatibility.\n    // This is a getter instead of a property because when it's a property, it\n    // prevents the entire class from being tree-shaken.\n    return 'Momentum';\n  }\n  private m: Scalar;\n  private accumulations: OptimizerVariable[] = [];\n\n  constructor(\n      protected override learningRate: number, private momentum: number,\n      private useNesterov = false) {\n    super(learningRate);\n    this.m = scalar(this.momentum);\n  }\n\n  override applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    variableNames.forEach((name, i) => {\n      const value = ENGINE.registeredVariables[name];\n      if (this.accumulations[i] == null) {\n        const trainable = false;\n        this.accumulations[i] = {\n          originalName: `${name}/momentum`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n\n      const accumulation = this.accumulations[i].variable;\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n\n      tidy(() => {\n        let newValue: Tensor;\n        const newAccumulation = add(mul(this.m, accumulation), gradient);\n        if (this.useNesterov) {\n          newValue = add(\n              mul(this.c, add(gradient, mul(newAccumulation, this.m))), value);\n        } else {\n          newValue = add(mul(this.c, newAccumulation), value);\n        }\n        accumulation.assign(newAccumulation);\n        value.assign(newValue);\n      });\n    });\n    this.incrementIterations();\n  }\n\n  override dispose(): void {\n    this.m.dispose();\n    if (this.accumulations != null) {\n      dispose(this.accumulations.map(v => v.variable));\n    }\n  }\n\n  /**\n   * Sets the momentum of the optimizer.\n   *\n   * @param momentum\n   */\n  setMomentum(momentum: number) {\n    this.momentum = momentum;\n  }\n\n  override async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    return [await this.saveIterations()].concat(this.accumulations.map(\n        v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  override async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    const trainable = false;\n    this.accumulations = weightValues.map(\n        v => ({originalName: v.name, variable: v.tensor.variable(trainable)}));\n  }\n\n  override getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'momentum': this.momentum,\n      'useNesterov': this.useNesterov\n    };\n  }\n\n  /** @nocollapse */\n  static override fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(\n        config['learningRate'], config['momentum'], config['useNesterov']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}