{"ast":null,"code":"import _slicedToArray from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BatchMatMul } from '../kernel_names';\nimport { matMul } from '../ops/mat_mul';\nexport var batchMatMulGradConfig = {\n  kernelName: BatchMatMul,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n      a = _saved[0],\n      b = _saved[1];\n    var transposeA = attrs.transposeA,\n      transposeB = attrs.transposeB;\n    if (!transposeA && !transposeB) {\n      return {\n        a: function a() {\n          return matMul(dy, b, false, true);\n        },\n        b: function b() {\n          return matMul(a, dy, true, false);\n        }\n      };\n    } else if (!transposeA && transposeB) {\n      return {\n        a: function a() {\n          return matMul(dy, b, false, false);\n        },\n        b: function b() {\n          return matMul(dy, a, true, false);\n        }\n      };\n    } else if (transposeA && !transposeB) {\n      return {\n        a: function a() {\n          return matMul(b, dy, false, true);\n        },\n        b: function b() {\n          return matMul(a, dy, false, false);\n        }\n      };\n    } else {\n      return {\n        a: function a() {\n          return matMul(b, dy, true, true);\n        },\n        b: function b() {\n          return matMul(dy, a, true, true);\n        }\n      };\n    }\n  }\n};","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,WAAW,QAAyB,iBAAiB;AAE7D,SAAQC,MAAM,QAAO,gBAAgB;AAGrC,OAAO,IAAMC,qBAAqB,GAAe;EAC/CC,UAAU,EAAEH,WAAW;EACvBI,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACxBC,QAAQ,EAAE,kBAACC,EAAU,EAAEC,KAAe,EAAEC,KAAmB,EAAI;IAC7D,4BAAeD,KAAK;MAAbE,CAAC;MAAEC,CAAC;IAEX,IAAOC,UAAU,GAAgBH,KAAoC,CAA9DG,UAAU;MAAEC,UAAU,GAAIJ,KAAoC,CAAlDI,UAAU;IAE7B,IAAI,CAACD,UAAU,IAAI,CAACC,UAAU,EAAE;MAC9B,OAAO;QACLH,CAAC,EAAE;UAAA,OAAMR,MAAM,CAACK,EAAE,EAAEI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;QAAA;QACnCA,CAAC,EAAE;UAAA,OAAMT,MAAM,CAACQ,CAAC,EAAEH,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC;QAAA;OACpC;KACF,MAAM,IAAI,CAACK,UAAU,IAAIC,UAAU,EAAE;MACpC,OAAO;QACLH,CAAC,EAAE;UAAA,OAAMR,MAAM,CAACK,EAAE,EAAEI,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;QAAA;QACpCA,CAAC,EAAE;UAAA,OAAMT,MAAM,CAACK,EAAE,EAAEG,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC;QAAA;OACpC;KACF,MAAM,IAAIE,UAAU,IAAI,CAACC,UAAU,EAAE;MACpC,OAAO;QACLH,CAAC,EAAE;UAAA,OAAMR,MAAM,CAACS,CAAC,EAAEJ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC;QAAA;QACnCI,CAAC,EAAE;UAAA,OAAMT,MAAM,CAACQ,CAAC,EAAEH,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC;QAAA;OACrC;KACF,MAAM;MACL,OAAO;QACLG,CAAC,EAAE;UAAA,OAAMR,MAAM,CAACS,CAAC,EAAEJ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC;QAAA;QAClCI,CAAC,EAAE;UAAA,OAAMT,MAAM,CAACK,EAAE,EAAEG,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;QAAA;OACnC;;EAEL;CACD","names":["BatchMatMul","matMul","batchMatMulGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","a","b","transposeA","transposeB"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-core\\src\\gradients\\BatchMatMul_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BatchMatMul, BatchMatMulAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {matMul} from '../ops/mat_mul';\nimport {Tensor} from '../tensor';\n\nexport const batchMatMulGradConfig: GradConfig = {\n  kernelName: BatchMatMul,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [a, b] = saved;\n\n    const {transposeA, transposeB} = attrs as unknown as BatchMatMulAttrs;\n\n    if (!transposeA && !transposeB) {\n      return {\n        a: () => matMul(dy, b, false, true),\n        b: () => matMul(a, dy, true, false)\n      };\n    } else if (!transposeA && transposeB) {\n      return {\n        a: () => matMul(dy, b, false, false),\n        b: () => matMul(dy, a, true, false)\n      };\n    } else if (transposeA && !transposeB) {\n      return {\n        a: () => matMul(b, dy, false, true),\n        b: () => matMul(a, dy, false, false)\n      };\n    } else {\n      return {\n        a: () => matMul(b, dy, true, true),\n        b: () => matMul(dy, a, true, true)\n      };\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}