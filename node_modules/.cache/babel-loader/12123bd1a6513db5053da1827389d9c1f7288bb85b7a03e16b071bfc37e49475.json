{"ast":null,"code":"import _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var PadPackedProgram = /*#__PURE__*/_createClass(function PadPackedProgram(xShape, paddings, constantValue) {\n  _classCallCheck(this, PadPackedProgram);\n  this.variableNames = ['x'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.customUniforms = [{\n    name: 'value',\n    type: 'float'\n  }];\n  this.outputShape = paddings.map(function (p, i) {\n    return p[0] /* beforePad */ + xShape[i] + p[1];\n  } /* afterPad */);\n  var rank = xShape.length;\n  var dtype = getCoordsDataType(rank);\n  var start = paddings.map(function (p) {\n    return p[0];\n  }).join(',');\n  var end = paddings.map(function (p, i) {\n    return p[0] + xShape[i];\n  }).join(',');\n  var coords = getChannels('rc', rank);\n  var source = getChannels('source', rank);\n  var cLimit = \"\".concat(coords[rank - 1], \" < \").concat(this.outputShape[rank - 1]);\n  var innerDims = rank === 1 ? 'source' : \"vec2(\".concat(source.slice(-2).join(), \")\");\n  var componentSetup = [\"\".concat(dtype, \" rc = outputLoc;\"), \"\".concat(coords[rank - 1], \" += 1;\\n       if(\").concat(cLimit, \") {\\n      \"), rank === 1 ? '' : \"}\\n       rc = outputLoc;\\n       \".concat(coords[rank - 2], \" += 1;\\n       if(\").concat(coords[rank - 2], \" < \").concat(this.outputShape[rank - 2], \") {\"), rank === 1 ? '' : \"  \".concat(coords[rank - 1], \" += 1;\\n         if(\").concat(cLimit, \") {\")];\n  var paddingArea = rank === 1 ? 'rc < start || rc >= end' : 'any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))';\n  var mainLoop = '';\n  for (var i = 0, j = rank === 1 ? 2 : 4; i < j; i++) {\n    mainLoop += \"\\n        \".concat(componentSetup[i], \"\\n        if (\").concat(paddingArea, \") {\\n          result[\").concat(i, \"] = float(value);\\n        } else {\\n          \").concat(dtype, \" source = rc - start;\\n          result[\").concat(i, \"] = getChannel(getX(\").concat(source.join(), \"), \").concat(innerDims, \");\\n        }\\n      \");\n  }\n  mainLoop += rank === 1 ? \"} \" : \"}}\";\n  this.userCode = \"\\n      const \".concat(dtype, \" start = \").concat(dtype, \"(\").concat(start, \");\\n      const \").concat(dtype, \" end = \").concat(dtype, \"(\").concat(end, \");\\n\\n      void main() {\\n        \").concat(dtype, \" outputLoc = getOutputCoords();\\n        vec4 result = vec4(0.);\\n        \").concat(mainLoop, \"\\n        setOutput(result);\\n      }\\n    \");\n});","map":{"version":3,"mappings":"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","names":["getChannels","getCoordsDataType","PadPackedProgram","xShape","paddings","constantValue","name","type","outputShape","map","p","i","rank","length","dtype","start","join","end","coords","source","cLimit","innerDims","slice","componentSetup","paddingArea","mainLoop","j","userCode"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\Toxic-Word-Checker\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\pad_packed_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getChannels} from './packing_util';\nimport {getCoordsDataType, UniformType} from './shader_compiler';\n\nexport class PadPackedProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  packedInputs = true;\n  packedOutput = true;\n  outputShape: number[];\n  userCode: string;\n  customUniforms = [{name: 'value', type: 'float' as UniformType}];\n\n  constructor(\n      xShape: number[], paddings: Array<[number, number]>,\n      constantValue: number) {\n    this.outputShape = paddings.map(\n        (p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n    const rank = xShape.length;\n    const dtype = getCoordsDataType(rank);\n\n    const start = paddings.map(p => p[0]).join(',');\n    const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n    const coords = getChannels('rc', rank);\n    const source = getChannels('source', rank);\n    const cLimit = `${coords[rank - 1]} < ${this.outputShape[rank - 1]}`;\n    const innerDims =\n        rank === 1 ? 'source' : `vec2(${source.slice(-2).join()})`;\n\n    const componentSetup = [\n      `${dtype} rc = outputLoc;`, `${coords[rank - 1]} += 1;\n       if(${cLimit}) {\n      `,\n      rank === 1 ? '' : `}\n       rc = outputLoc;\n       ${coords[rank - 2]} += 1;\n       if(${coords[rank - 2]} < ${this.outputShape[rank - 2]}) {`,\n      rank === 1 ? '' : `  ${coords[rank - 1]} += 1;\n         if(${cLimit}) {`\n    ];\n\n    const paddingArea = rank === 1 ?\n        'rc < start || rc >= end' :\n        'any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))';\n    let mainLoop = '';\n    for (let i = 0, j = rank === 1 ? 2 : 4; i < j; i++) {\n      mainLoop += `\n        ${componentSetup[i]}\n        if (${paddingArea}) {\n          result[${i}] = float(value);\n        } else {\n          ${dtype} source = rc - start;\n          result[${i}] = getChannel(getX(${source.join()}), ${innerDims});\n        }\n      `;\n    }\n    mainLoop += (rank === 1 ? `} ` : `}}`);\n\n    this.userCode = `\n      const ${dtype} start = ${dtype}(${start});\n      const ${dtype} end = ${dtype}(${end});\n\n      void main() {\n        ${dtype} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${mainLoop}\n        setOutput(result);\n      }\n    `;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}