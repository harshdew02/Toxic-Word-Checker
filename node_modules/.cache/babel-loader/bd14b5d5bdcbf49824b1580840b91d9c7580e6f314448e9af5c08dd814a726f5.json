{"ast":null,"code":"import _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nexport var ConcatProgram = /*#__PURE__*/_createClass(\n// Concats 2d tensors along axis=1. See comments in MathBackendWebGL.concat().\nfunction ConcatProgram(shapes) {\n  _classCallCheck(this, ConcatProgram);\n  this.outputShape = [];\n  this.outputShape = backend_util.computeOutShape(shapes, 1 /* axis */);\n  this.variableNames = shapes.map(function (_, i) {\n    return \"T\".concat(i);\n  });\n  var offsets = new Array(shapes.length - 1);\n  offsets[0] = shapes[0][1];\n  for (var i = 1; i < offsets.length; i++) {\n    offsets[i] = offsets[i - 1] + shapes[i][1];\n  }\n  var snippets = [\"if (yC < \".concat(offsets[0], \") setOutput(getT0(yR, yC));\")];\n  for (var _i = 1; _i < offsets.length; _i++) {\n    var shift = offsets[_i - 1];\n    snippets.push(\"else if (yC < \".concat(offsets[_i], \") \") + \"setOutput(getT\".concat(_i, \"(yR, yC-\").concat(shift, \"));\"));\n  }\n  var lastIndex = offsets.length;\n  var lastShift = offsets[offsets.length - 1];\n  snippets.push(\"else setOutput(getT\".concat(lastIndex, \"(yR, yC-\").concat(lastShift, \"));\"));\n  this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int yR = coords.x;\\n        int yC = coords.y;\\n\\n        \".concat(snippets.join('\\n        '), \"\\n      }\\n    \");\n});","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,QAAO,uBAAuB;AAGlD,WAAaC,aAAa;AAKxB;AACA,uBAAYC,MAA+B;EAAA;EAJ3C,gBAAW,GAAa,EAAE;EAKxB,IAAI,CAACC,WAAW,GAAGH,YAAY,CAACI,eAAe,CAACF,MAAM,EAAE,CAAC,CAAC,WAAW;EACrE,IAAI,CAACG,aAAa,GAAGH,MAAM,CAACI,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,kBAASA,CAAC;EAAA,CAAE,CAAC;EAElD,IAAMC,OAAO,GAAa,IAAIC,KAAK,CAACR,MAAM,CAACS,MAAM,GAAG,CAAC,CAAC;EACtDF,OAAO,CAAC,CAAC,CAAC,GAAGP,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,OAAO,CAACE,MAAM,EAAEH,CAAC,EAAE,EAAE;IACvCC,OAAO,CAACD,CAAC,CAAC,GAAGC,OAAO,CAACD,CAAC,GAAG,CAAC,CAAC,GAAGN,MAAM,CAACM,CAAC,CAAC,CAAC,CAAC,CAAC;;EAG5C,IAAMI,QAAQ,GAAG,oBAAaH,OAAO,CAAC,CAAC,CAAC,iCAA8B;EACtE,KAAK,IAAID,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGC,OAAO,CAACE,MAAM,EAAEH,EAAC,EAAE,EAAE;IACvC,IAAMK,KAAK,GAAGJ,OAAO,CAACD,EAAC,GAAG,CAAC,CAAC;IAC5BI,QAAQ,CAACE,IAAI,CACT,wBAAiBL,OAAO,CAACD,EAAC,CAAC,kCACVA,EAAC,qBAAWK,KAAK,QAAK,CAAC;;EAE9C,IAAME,SAAS,GAAGN,OAAO,CAACE,MAAM;EAChC,IAAMK,SAAS,GAAGP,OAAO,CAACA,OAAO,CAACE,MAAM,GAAG,CAAC,CAAC;EAC7CC,QAAQ,CAACE,IAAI,8BAAuBC,SAAS,qBAAWC,SAAS,SAAM;EAEvE,IAAI,CAACC,QAAQ,iJAMPL,QAAQ,CAACM,IAAI,CAAC,YAAY,CAAC,oBAEhC;AACH,CAAC","names":["backend_util","ConcatProgram","shapes","outputShape","computeOutShape","variableNames","map","_","i","offsets","Array","length","snippets","shift","push","lastIndex","lastShift","userCode","join"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\concat_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ConcatProgram implements GPGPUProgram {\n  variableNames: string[];\n  outputShape: number[] = [];\n  userCode: string;\n\n  // Concats 2d tensors along axis=1. See comments in MathBackendWebGL.concat().\n  constructor(shapes: Array<[number, number]>) {\n    this.outputShape = backend_util.computeOutShape(shapes, 1 /* axis */);\n    this.variableNames = shapes.map((_, i) => `T${i}`);\n\n    const offsets: number[] = new Array(shapes.length - 1);\n    offsets[0] = shapes[0][1];\n    for (let i = 1; i < offsets.length; i++) {\n      offsets[i] = offsets[i - 1] + shapes[i][1];\n    }\n\n    const snippets = [`if (yC < ${offsets[0]}) setOutput(getT0(yR, yC));`];\n    for (let i = 1; i < offsets.length; i++) {\n      const shift = offsets[i - 1];\n      snippets.push(\n          `else if (yC < ${offsets[i]}) ` +\n          `setOutput(getT${i}(yR, yC-${shift}));`);\n    }\n    const lastIndex = offsets.length;\n    const lastShift = offsets[offsets.length - 1];\n    snippets.push(`else setOutput(getT${lastIndex}(yR, yC-${lastShift}));`);\n\n    this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${snippets.join('\\n        ')}\n      }\n    `;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}