{"ast":null,"code":"import _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { useShapeUniforms } from './gpgpu_math';\nimport { getChannels, getSourceCoords } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var UnpackProgram = /*#__PURE__*/_createClass(function UnpackProgram(outputShape) {\n  _classCallCheck(this, UnpackProgram);\n  this.variableNames = ['A'];\n  this.packedInputs = true;\n  this.packedOutput = false;\n  this.outputShape = outputShape;\n  this.enableShapeUniforms = useShapeUniforms(this.outputShape.length);\n  var rank = outputShape.length;\n  var channels = getChannels('rc', rank);\n  var dtype = getCoordsDataType(rank);\n  var sourceCoords = getSourceCoords(rank, channels);\n  var innerDims = channels.slice(-2);\n  var coords = rank <= 1 ? 'rc' : \"vec2(\".concat(innerDims.join(','), \")\");\n  this.userCode = \"\\n      void main() {\\n        \".concat(dtype, \" rc = getOutputCoords();\\n        vec4 packedInput = getA(\").concat(sourceCoords, \");\\n\\n        setOutput(getChannel(packedInput, \").concat(coords, \"));\\n      }\\n    \");\n});","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;AAiBA,SAAsBA,gBAAgB,QAAO,cAAc;AAC3D,SAAQC,WAAW,EAAEC,eAAe,QAAO,gBAAgB;AAC3D,SAAQC,iBAAiB,QAAO,mBAAmB;AAEnD,WAAaC,aAAa,6BAQxB,uBAAYC,WAAqB;EAAA;EAPjC,kBAAa,GAAG,CAAC,GAAG,CAAC;EACrB,iBAAY,GAAG,IAAI;EACnB,iBAAY,GAAG,KAAK;EAMlB,IAAI,CAACA,WAAW,GAAGA,WAAW;EAC9B,IAAI,CAACC,mBAAmB,GAAGN,gBAAgB,CAAC,IAAI,CAACK,WAAW,CAACE,MAAM,CAAC;EACpE,IAAMC,IAAI,GAAGH,WAAW,CAACE,MAAM;EAE/B,IAAME,QAAQ,GAAGR,WAAW,CAAC,IAAI,EAAEO,IAAI,CAAC;EACxC,IAAME,KAAK,GAAGP,iBAAiB,CAACK,IAAI,CAAC;EACrC,IAAMG,YAAY,GAAGT,eAAe,CAACM,IAAI,EAAEC,QAAQ,CAAC;EACpD,IAAMG,SAAS,GAAGH,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;EACpC,IAAMC,MAAM,GAAGN,IAAI,IAAI,CAAC,GAAG,IAAI,kBAAWI,SAAS,CAACG,IAAI,CAAC,GAAG,CAAC,MAAG;EAEhE,IAAI,CAACC,QAAQ,4CAEPN,KAAK,uEACmBC,YAAY,6DAEFG,MAAM,uBAE7C;AACH,CAAC","names":["useShapeUniforms","getChannels","getSourceCoords","getCoordsDataType","UnpackProgram","outputShape","enableShapeUniforms","length","rank","channels","dtype","sourceCoords","innerDims","slice","coords","join","userCode"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\unpack_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram, useShapeUniforms} from './gpgpu_math';\nimport {getChannels, getSourceCoords} from './packing_util';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class UnpackProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  packedInputs = true;\n  packedOutput = false;\n  outputShape: number[];\n  userCode: string;\n  enableShapeUniforms: boolean;\n\n  constructor(outputShape: number[]) {\n    this.outputShape = outputShape;\n    this.enableShapeUniforms = useShapeUniforms(this.outputShape.length);\n    const rank = outputShape.length;\n\n    const channels = getChannels('rc', rank);\n    const dtype = getCoordsDataType(rank);\n    const sourceCoords = getSourceCoords(rank, channels);\n    const innerDims = channels.slice(-2);\n    const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n\n    this.userCode = `\n      void main() {\n        ${dtype} rc = getOutputCoords();\n        vec4 packedInput = getA(${sourceCoords});\n\n        setOutput(getChannel(packedInput, ${coords}));\n      }\n    `;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}