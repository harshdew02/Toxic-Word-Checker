{"ast":null,"code":"import _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var SliceProgram = /*#__PURE__*/_createClass(function SliceProgram(destSize) {\n  _classCallCheck(this, SliceProgram);\n  this.variableNames = ['source'];\n  this.outputShape = destSize;\n  this.rank = destSize.length;\n  var dtype = getCoordsDataType(this.rank);\n  this.customUniforms = [{\n    name: 'start',\n    arrayIndex: this.rank,\n    type: 'int'\n  }];\n  var sourceCoords = getCoords(this.rank);\n  var body;\n  var coordSum = destSize.map(function (_, i) {\n    return \"sourceLoc.\".concat(coords[i], \" = start[\").concat(i, \"] + coords.\").concat(coords[i], \";\");\n  });\n  body = \"\\n        \".concat(dtype, \" sourceLoc;\\n        \").concat(dtype, \" coords = getOutputCoords();\\n        \").concat(coordSum.join('\\n'), \"\\n      \");\n  this.userCode = \"\\n      void main() {\\n        \".concat(body, \"\\n        setOutput(getSource(\").concat(sourceCoords, \"));\\n      }\\n    \");\n});\nvar coords = ['x', 'y', 'z', 'w', 'u', 'v'];\nfunction getCoords(rank) {\n  if (rank === 1) {\n    return 'sourceLoc';\n  } else if (rank <= 6) {\n    return coords.slice(0, rank).map(function (x) {\n      return 'sourceLoc.' + x;\n    }).join(',');\n  } else {\n    throw Error(\"Slicing for rank \".concat(rank, \" is not yet supported\"));\n  }\n}","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;AAkBA,SAAQA,iBAAiB,QAAoB,mBAAmB;AAEhE,WAAaC,YAAY,6BAOvB,sBAAYC,QAAkB;EAAA;EAN9B,kBAAa,GAAG,CAAC,QAAQ,CAAC;EAOxB,IAAI,CAACC,WAAW,GAAGD,QAAQ;EAC3B,IAAI,CAACE,IAAI,GAAGF,QAAQ,CAACG,MAAM;EAE3B,IAAMC,KAAK,GAAGN,iBAAiB,CAAC,IAAI,CAACI,IAAI,CAAC;EAC1C,IAAI,CAACG,cAAc,GAAG,CAAC;IAACC,IAAI,EAAE,OAAO;IAAEC,UAAU,EAAE,IAAI,CAACL,IAAI;IAAEM,IAAI,EAAE;EAAK,CAAC,CAAC;EAC3E,IAAMC,YAAY,GAAGC,SAAS,CAAC,IAAI,CAACR,IAAI,CAAC;EAEzC,IAAIS,IAAY;EAChB,IAAMC,QAAQ,GAAGZ,QAAQ,CAACa,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAI;IACrC,2BAAoBC,MAAM,CAACD,CAAC,CAAC,sBAAYA,CAAC,wBAAcC,MAAM,CAACD,CAAC,CAAC;EACnE,CAAC,CAAC;EACFJ,IAAI,uBACEP,KAAK,kCACLA,KAAK,mDACLQ,QAAQ,CAACK,IAAI,CAAC,IAAI,CAAC,aACtB;EACH,IAAI,CAACC,QAAQ,4CAEPP,IAAI,2CACgBF,YAAY,uBAErC;AACH,CAAC;AAGH,IAAMO,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAE7C,SAASN,SAAS,CAACR,IAAY;EAC7B,IAAIA,IAAI,KAAK,CAAC,EAAE;IACd,OAAO,WAAW;GACnB,MAAM,IAAIA,IAAI,IAAI,CAAC,EAAE;IACpB,OAAOc,MAAM,CAACG,KAAK,CAAC,CAAC,EAAEjB,IAAI,CAAC,CAACW,GAAG,CAAC,WAAC;MAAA,OAAI,YAAY,GAAGO,CAAC;IAAA,EAAC,CAACH,IAAI,CAAC,GAAG,CAAC;GAClE,MAAM;IACL,MAAMI,KAAK,4BAAqBnB,IAAI,2BAAwB;;AAEhE","names":["getCoordsDataType","SliceProgram","destSize","outputShape","rank","length","dtype","customUniforms","name","arrayIndex","type","sourceCoords","getCoords","body","coordSum","map","_","i","coords","join","userCode","slice","x","Error"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\slice_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType, UniformType} from './shader_compiler';\n\nexport class SliceProgram implements GPGPUProgram {\n  variableNames = ['source'];\n  outputShape: number[];\n  userCode: string;\n  rank: number;\n  customUniforms: Array<{name: string; arrayIndex: number; type: UniformType;}>;\n\n  constructor(destSize: number[]) {\n    this.outputShape = destSize;\n    this.rank = destSize.length;\n\n    const dtype = getCoordsDataType(this.rank);\n    this.customUniforms = [{name: 'start', arrayIndex: this.rank, type: 'int'}];\n    const sourceCoords = getCoords(this.rank);\n\n    let body: string;\n    const coordSum = destSize.map((_, i) => {\n      return `sourceLoc.${coords[i]} = start[${i}] + coords.${coords[i]};`;\n    });\n    body = `\n        ${dtype} sourceLoc;\n        ${dtype} coords = getOutputCoords();\n        ${coordSum.join('\\n')}\n      `;\n    this.userCode = `\n      void main() {\n        ${body}\n        setOutput(getSource(${sourceCoords}));\n      }\n    `;\n  }\n}\n\nconst coords = ['x', 'y', 'z', 'w', 'u', 'v'];\n\nfunction getCoords(rank: number): string {\n  if (rank === 1) {\n    return 'sourceLoc';\n  } else if (rank <= 6) {\n    return coords.slice(0, rank).map(x => 'sourceLoc.' + x).join(',');\n  } else {\n    throw Error(`Slicing for rank ${rank} is not yet supported`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}