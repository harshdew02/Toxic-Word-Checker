{"ast":null,"code":"import _slicedToArray from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Mean } from '../kernel_names';\nimport { computeOutAndReduceShapes } from '../ops/axis_util';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { ones } from '../ops/ones';\nimport { reshape } from '../ops/reshape';\nimport * as util from '../util';\nexport var meanGradConfig = {\n  kernelName: Mean,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n      x = _saved[0];\n    var axis = attrs.axis;\n    var axes = util.parseAxisParam(axis, x.shape);\n    var shapes = computeOutAndReduceShapes(x.shape, axes);\n    var reduceShape = shapes[1];\n    var reduceSize = util.sizeFromShape(reduceShape);\n    var derX = function derX() {\n      var expandedDyShape = x.shape.slice();\n      axes.forEach(function (axis) {\n        expandedDyShape[axis] = 1;\n      });\n      var expandedDy = reshape(dy, expandedDyShape);\n      var res = div(mul(expandedDy, ones(x.shape, 'float32')), reduceSize);\n      return res;\n    };\n    return {\n      x: derX\n    };\n  }\n};","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,IAAI,QAAkB,iBAAiB;AAE/C,SAAQC,yBAAyB,QAAO,kBAAkB;AAC1D,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,IAAI,QAAO,aAAa;AAChC,SAAQC,OAAO,QAAO,gBAAgB;AAEtC,OAAO,KAAKC,IAAI,MAAM,SAAS;AAE/B,OAAO,IAAMC,cAAc,GAAe;EACxCC,UAAU,EAAER,IAAI;EAChBS,YAAY,EAAE,CAAC,GAAG,CAAC;EACnBC,QAAQ,EAAE,kBAACC,EAAU,EAAEC,KAAe,EAAEC,KAAmB,EAAI;IAC7D,4BAAYD,KAAK;MAAVE,CAAC;IACR,IAAOC,IAAI,GAAIF,KAA6B,CAArCE,IAAI;IACX,IAAMC,IAAI,GAAGV,IAAI,CAACW,cAAc,CAACF,IAAI,EAAED,CAAC,CAACI,KAAK,CAAC;IAC/C,IAAMC,MAAM,GAAGlB,yBAAyB,CAACa,CAAC,CAACI,KAAK,EAAEF,IAAI,CAAC;IACvD,IAAMI,WAAW,GAAGD,MAAM,CAAC,CAAC,CAAC;IAC7B,IAAME,UAAU,GAAGf,IAAI,CAACgB,aAAa,CAACF,WAAW,CAAC;IAElD,IAAMG,IAAI,GAAG,SAAPA,IAAI,GAAQ;MAChB,IAAMC,eAAe,GAAGV,CAAC,CAACI,KAAK,CAACO,KAAK,EAAE;MACvCT,IAAI,CAACU,OAAO,CAAC,cAAI,EAAG;QAClBF,eAAe,CAACT,IAAI,CAAC,GAAG,CAAC;MAC3B,CAAC,CAAC;MACF,IAAMY,UAAU,GAAGtB,OAAO,CAACM,EAAE,EAAEa,eAAe,CAAC;MAC/C,IAAMI,GAAG,GAAG1B,GAAG,CAACC,GAAG,CAACwB,UAAU,EAAEvB,IAAI,CAACU,CAAC,CAACI,KAAK,EAAE,SAAS,CAAC,CAAC,EAAEG,UAAU,CAAC;MACtE,OAAOO,GAAG;IACZ,CAAC;IAED,OAAO;MAACd,CAAC,EAAES;IAAI,CAAC;EAClB;CACD","names":["Mean","computeOutAndReduceShapes","div","mul","ones","reshape","util","meanGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","x","axis","axes","parseAxisParam","shape","shapes","reduceShape","reduceSize","sizeFromShape","derX","expandedDyShape","slice","forEach","expandedDy","res"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\Toxic-Word-Checker\\node_modules\\@tensorflow\\tfjs-core\\src\\gradients\\Mean_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Mean, MeanAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {computeOutAndReduceShapes} from '../ops/axis_util';\nimport {div} from '../ops/div';\nimport {mul} from '../ops/mul';\nimport {ones} from '../ops/ones';\nimport {reshape} from '../ops/reshape';\nimport {Tensor} from '../tensor';\nimport * as util from '../util';\n\nexport const meanGradConfig: GradConfig = {\n  kernelName: Mean,\n  inputsToSave: ['x'],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x] = saved;\n    const {axis} = attrs as unknown as MeanAttrs;\n    const axes = util.parseAxisParam(axis, x.shape);\n    const shapes = computeOutAndReduceShapes(x.shape, axes);\n    const reduceShape = shapes[1];\n    const reduceSize = util.sizeFromShape(reduceShape);\n\n    const derX = () => {\n      const expandedDyShape = x.shape.slice();\n      axes.forEach(axis => {\n        expandedDyShape[axis] = 1;\n      });\n      const expandedDy = reshape(dy, expandedDyShape);\n      const res = div(mul(expandedDy, ones(x.shape, 'float32')), reduceSize);\n      return res;\n    };\n\n    return {x: derX};\n  }\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}