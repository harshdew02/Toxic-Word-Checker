{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transpose } from '@tensorflow/tfjs-core';\nimport { transposeImpl } from './Transpose_impl';\nimport { transposeImplCPU as cpuTranspose } from './Transpose_impl';\nexport function transpose(args) {\n  var inputs = args.inputs,\n    backend = args.backend,\n    attrs = args.attrs;\n  var x = inputs.x;\n  var perm = attrs.perm;\n  var webglBackend = backend;\n  var xRank = x.shape.length;\n  var newShape = new Array(xRank);\n  for (var i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[perm[i]];\n  }\n  var out;\n  if (webglBackend.shouldExecuteOnCPU([x])) {\n    var xTexData = webglBackend.texData.get(x.dataId);\n    var values = xTexData.values;\n    var outValues = cpuTranspose(values, x.shape, x.dtype, perm, newShape);\n    out = webglBackend.makeTensorInfo(newShape, x.dtype);\n    var outData = webglBackend.texData.get(out.dataId);\n    outData.values = outValues;\n  } else {\n    out = transposeImpl(x, perm, webglBackend);\n  }\n  return out;\n}\nexport var transposeConfig = {\n  kernelName: Transpose,\n  backendName: 'webgl',\n  kernelFunc: transpose\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAA8CA,SAAS,QAAoD,uBAAuB;AAIlI,SAAQC,aAAa,QAAO,kBAAkB;AAC9C,SAAQC,gBAAgB,IAAIC,YAAY,QAAO,kBAAkB;AAEjE,OAAM,SAAUC,SAAS,CAACC,IAIzB;EACC,IAAOC,MAAM,GAAoBD,IAAI,CAA9BC,MAAM;IAAEC,OAAO,GAAWF,IAAI,CAAtBE,OAAO;IAAEC,KAAK,GAAIH,IAAI,CAAbG,KAAK;EAC7B,IAAOC,CAAC,GAAIH,MAAM,CAAXG,CAAC;EACR,IAAOC,IAAI,GAAIF,KAAK,CAAbE,IAAI;EACX,IAAMC,YAAY,GAAGJ,OAAO;EAE5B,IAAMK,KAAK,GAAGH,CAAC,CAACI,KAAK,CAACC,MAAM;EAE5B,IAAMC,QAAQ,GAAa,IAAIC,KAAK,CAACJ,KAAK,CAAC;EAC3C,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,CAACD,MAAM,EAAEG,CAAC,EAAE,EAAE;IACxCF,QAAQ,CAACE,CAAC,CAAC,GAAGR,CAAC,CAACI,KAAK,CAACH,IAAI,CAACO,CAAC,CAAC,CAAC;;EAGhC,IAAIC,GAAe;EACnB,IAAIP,YAAY,CAACQ,kBAAkB,CAAC,CAACV,CAAC,CAAC,CAAC,EAAE;IACxC,IAAMW,QAAQ,GAAGT,YAAY,CAACU,OAAO,CAACC,GAAG,CAACb,CAAC,CAACc,MAAM,CAAC;IACnD,IAAMC,MAAM,GAAGJ,QAAQ,CAACI,MAAoB;IAC5C,IAAMC,SAAS,GAAGtB,YAAY,CAACqB,MAAM,EAAEf,CAAC,CAACI,KAAK,EAAEJ,CAAC,CAACiB,KAAK,EAAEhB,IAAI,EAAEK,QAAQ,CAAC;IAExEG,GAAG,GAAGP,YAAY,CAACgB,cAAc,CAACZ,QAAQ,EAAEN,CAAC,CAACiB,KAAK,CAAC;IACpD,IAAME,OAAO,GAAGjB,YAAY,CAACU,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACK,MAAM,CAAC;IACpDK,OAAO,CAACJ,MAAM,GAAGC,SAAS;GAC3B,MAAM;IACLP,GAAG,GAAGjB,aAAa,CAACQ,CAAC,EAAEC,IAAI,EAAEC,YAAY,CAAC;;EAE5C,OAAOO,GAAG;AACZ;AAEA,OAAO,IAAMW,eAAe,GAAiB;EAC3CC,UAAU,EAAE9B,SAAS;EACrB+B,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAE5B;CACb","names":["Transpose","transposeImpl","transposeImplCPU","cpuTranspose","transpose","args","inputs","backend","attrs","x","perm","webglBackend","xRank","shape","length","newShape","Array","i","out","shouldExecuteOnCPU","xTexData","texData","get","dataId","values","outValues","dtype","makeTensorInfo","outData","transposeConfig","kernelName","backendName","kernelFunc"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\kernels\\Transpose.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transpose, TransposeAttrs, TransposeInputs, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\n\nimport {transposeImpl} from './Transpose_impl';\nimport {transposeImplCPU as cpuTranspose} from './Transpose_impl';\n\nexport function transpose(args: {\n  inputs: TransposeInputs,\n  attrs: TransposeAttrs,\n  backend: MathBackendWebGL\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {perm} = attrs;\n  const webglBackend = backend;\n\n  const xRank = x.shape.length;\n\n  const newShape: number[] = new Array(xRank);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[perm[i]];\n  }\n\n  let out: TensorInfo;\n  if (webglBackend.shouldExecuteOnCPU([x])) {\n    const xTexData = webglBackend.texData.get(x.dataId);\n    const values = xTexData.values as TypedArray;\n    const outValues = cpuTranspose(values, x.shape, x.dtype, perm, newShape);\n\n    out = webglBackend.makeTensorInfo(newShape, x.dtype);\n    const outData = webglBackend.texData.get(out.dataId);\n    outData.values = outValues;\n  } else {\n    out = transposeImpl(x, perm, webglBackend);\n  }\n  return out;\n}\n\nexport const transposeConfig: KernelConfig = {\n  kernelName: Transpose,\n  backendName: 'webgl',\n  kernelFunc: transpose as unknown as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}