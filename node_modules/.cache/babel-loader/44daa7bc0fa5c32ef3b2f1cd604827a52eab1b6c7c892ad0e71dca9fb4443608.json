{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FFT, util } from '@tensorflow/tfjs-core';\nimport { fftBatch } from '../utils/fft_utils';\nimport { reshape } from './Reshape';\nexport function fft(args) {\n  var inputs = args.inputs,\n    backend = args.backend;\n  var input = inputs.input;\n  var inputSize = util.sizeFromShape(input.shape);\n  // Collapse all outer dimensions to a single batch dimension.\n  var innerDimensionSize = input.shape[input.shape.length - 1];\n  var batch = inputSize / innerDimensionSize;\n  var input2D = reshape({\n    inputs: {\n      x: input\n    },\n    backend: backend,\n    attrs: {\n      shape: [batch, innerDimensionSize]\n    }\n  });\n  var result = fftBatch(input2D, false, backend);\n  var resultReshaped = reshape({\n    inputs: {\n      x: result\n    },\n    backend: backend,\n    attrs: {\n      shape: input.shape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(input2D);\n  backend.disposeIntermediateTensorInfo(result);\n  return resultReshaped;\n}\nexport var fftConfig = {\n  kernelName: FFT,\n  backendName: 'cpu',\n  kernelFunc: fft\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,GAAG,EAAmDC,IAAI,QAAO,uBAAuB;AAGhG,SAAQC,QAAQ,QAAO,oBAAoB;AAC3C,SAAQC,OAAO,QAAO,WAAW;AAEjC,OAAM,SAAUC,GAAG,CAACC,IAAkD;EAEpE,IAAOC,MAAM,GAAaD,IAAI,CAAvBC,MAAM;IAAEC,OAAO,GAAIF,IAAI,CAAfE,OAAO;EACtB,IAAOC,KAAK,GAAIF,MAAM,CAAfE,KAAK;EAEZ,IAAMC,SAAS,GAAGR,IAAI,CAACS,aAAa,CAACF,KAAK,CAACG,KAAK,CAAC;EAEjD;EACA,IAAMC,kBAAkB,GAAGJ,KAAK,CAACG,KAAK,CAACH,KAAK,CAACG,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC;EAC9D,IAAMC,KAAK,GAAGL,SAAS,GAAGG,kBAAkB;EAE5C,IAAMG,OAAO,GAAGZ,OAAO,CAAC;IACtBG,MAAM,EAAE;MAACU,CAAC,EAAER;IAAK,CAAC;IAClBD,OAAO,EAAPA,OAAO;IACPU,KAAK,EAAE;MAACN,KAAK,EAAE,CAACG,KAAK,EAAEF,kBAAkB;IAAC;GAC3C,CAAC;EAEF,IAAMM,MAAM,GAAGhB,QAAQ,CAACa,OAAO,EAAE,KAAK,EAAER,OAAO,CAAC;EAEhD,IAAMY,cAAc,GAChBhB,OAAO,CAAC;IAACG,MAAM,EAAE;MAACU,CAAC,EAAEE;IAAM,CAAC;IAAEX,OAAO,EAAPA,OAAO;IAAEU,KAAK,EAAE;MAACN,KAAK,EAAEH,KAAK,CAACG;IAAK;EAAC,CAAC,CAAC;EAExEJ,OAAO,CAACa,6BAA6B,CAACL,OAAO,CAAC;EAC9CR,OAAO,CAACa,6BAA6B,CAACF,MAAM,CAAC;EAE7C,OAAOC,cAAc;AACvB;AAEA,OAAO,IAAME,SAAS,GAAiB;EACrCC,UAAU,EAAEtB,GAAG;EACfuB,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAEpB;CACb","names":["FFT","util","fftBatch","reshape","fft","args","inputs","backend","input","inputSize","sizeFromShape","shape","innerDimensionSize","length","batch","input2D","x","attrs","result","resultReshaped","disposeIntermediateTensorInfo","fftConfig","kernelName","backendName","kernelFunc"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\Toxic-Word-Checker\\node_modules\\@tensorflow\\tfjs-backend-cpu\\src\\kernels\\FFT.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FFT, FFTInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {fftBatch} from '../utils/fft_utils';\nimport {reshape} from './Reshape';\n\nexport function fft(args: {inputs: FFTInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {input} = inputs;\n\n  const inputSize = util.sizeFromShape(input.shape);\n\n  // Collapse all outer dimensions to a single batch dimension.\n  const innerDimensionSize = input.shape[input.shape.length - 1];\n  const batch = inputSize / innerDimensionSize;\n\n  const input2D = reshape({\n    inputs: {x: input},\n    backend,\n    attrs: {shape: [batch, innerDimensionSize]}\n  });\n\n  const result = fftBatch(input2D, false, backend);\n\n  const resultReshaped =\n      reshape({inputs: {x: result}, backend, attrs: {shape: input.shape}});\n\n  backend.disposeIntermediateTensorInfo(input2D);\n  backend.disposeIntermediateTensorInfo(result);\n\n  return resultReshaped;\n}\n\nexport const fftConfig: KernelConfig = {\n  kernelName: FFT,\n  backendName: 'cpu',\n  kernelFunc: fft as unknown as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}