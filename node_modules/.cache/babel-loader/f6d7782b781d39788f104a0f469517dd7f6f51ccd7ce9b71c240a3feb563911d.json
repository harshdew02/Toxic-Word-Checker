{"ast":null,"code":"import _slicedToArray from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Dilation2D, Dilation2DBackpropFilter, Dilation2DBackpropInput } from '../kernel_names';\nexport var dilation2dGradConfig = {\n  kernelName: Dilation2D,\n  inputsToSave: ['x', 'filter'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n      x = _saved[0],\n      filter = _saved[1];\n    var inputInputs = {\n      x: x,\n      filter: filter,\n      dy: dy\n    };\n    var filterInputs = {\n      x: x,\n      filter: filter,\n      dy: dy\n    };\n    return {\n      x: function x() {\n        return ENGINE.runKernel(Dilation2DBackpropInput, inputInputs, attrs);\n      },\n      filter: function filter() {\n        return ENGINE.runKernel(Dilation2DBackpropFilter, filterInputs, attrs);\n      }\n    };\n  }\n};","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,MAAM,QAAO,WAAW;AAChC,SAAQC,UAAU,EAAEC,wBAAwB,EAAkCC,uBAAuB,QAAsC,iBAAiB;AAM5J,OAAO,IAAMC,oBAAoB,GAAe;EAC9CC,UAAU,EAAEJ,UAAU;EACtBK,YAAY,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC;EAC7BC,QAAQ,EAAE,kBAACC,EAAY,EAAEC,KAAe,EAAEC,KAAmB,EAAI;IAC/D,4BAAoBD,KAA6B;MAA1CE,CAAC;MAAEC,MAAM;IAEhB,IAAMC,WAAW,GAAkC;MAACF,CAAC,EAADA,CAAC;MAAEC,MAAM,EAANA,MAAM;MAAEJ,EAAE,EAAFA;IAAE,CAAC;IAClE,IAAMM,YAAY,GAAmC;MAACH,CAAC,EAADA,CAAC;MAAEC,MAAM,EAANA,MAAM;MAAEJ,EAAE,EAAFA;IAAE,CAAC;IAEpE,OAAO;MACLG,CAAC,EAAE;QAAA,OAAMX,MAAM,CAACe,SAAS,CACrBZ,uBAAuB,EACvBU,WAAwC,EAAEH,KAAK,CAAC;MAAA;MACpDE,MAAM,EAAE;QAAA,OAAMZ,MAAM,CAACe,SAAS,CAC1Bb,wBAAwB,EACxBY,YAAyC,EAAEJ,KAAK,CAAC;MAAA;KACtD;EACH;CACD","names":["ENGINE","Dilation2D","Dilation2DBackpropFilter","Dilation2DBackpropInput","dilation2dGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","x","filter","inputInputs","filterInputs","runKernel"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-core\\src\\gradients\\Dilation2D_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Dilation2D, Dilation2DBackpropFilter, Dilation2DBackpropFilterInputs, Dilation2DBackpropInput, Dilation2DBackpropInputInputs} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor, Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\n\nexport const dilation2dGradConfig: GradConfig = {\n  kernelName: Dilation2D,\n  inputsToSave: ['x', 'filter'],\n  gradFunc: (dy: Tensor4D, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x, filter] = saved as [Tensor4D, Tensor3D];\n\n    const inputInputs: Dilation2DBackpropInputInputs = {x, filter, dy};\n    const filterInputs: Dilation2DBackpropFilterInputs = {x, filter, dy};\n\n    return {\n      x: () => ENGINE.runKernel(\n          Dilation2DBackpropInput,\n          inputInputs as unknown as NamedTensorMap, attrs),\n      filter: () => ENGINE.runKernel(\n          Dilation2DBackpropFilter,\n          filterInputs as unknown as NamedTensorMap, attrs)\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}