{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET, UnaryOpProgram } from '../unaryop_gpu';\nexport function step(_ref) {\n  var inputs = _ref.inputs,\n    attrs = _ref.attrs,\n    backend = _ref.backend;\n  var x = inputs.x;\n  var opSnippet = CHECK_NAN_SNIPPET + \"\\n    return x > 0.0 ? 1.0 : float(\".concat(attrs.alpha, \");\\n  \");\n  var program = new UnaryOpProgram(x.shape, opSnippet);\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport var stepConfig = {\n  kernelName: Step,\n  backendName: 'webgl',\n  kernelFunc: step\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,IAAI,QAA2C,uBAAuB;AAGxG,SAAQC,iBAAiB,EAAEC,cAAc,QAAO,gBAAgB;AAEhE,OAAM,SAAUC,IAAI,OAEsD;EAAA,IADrEC,MAAM,QAANA,MAAM;IAAEC,KAAK,QAALA,KAAK;IAAEC,OAAO,QAAPA,OAAO;EAGzB,IAAOC,CAAC,GAAIH,MAAM,CAAXG,CAAC;EACR,IAAMC,SAAS,GAAGP,iBAAiB,gDACFI,KAAK,CAACI,KAAK,WAC3C;EAED,IAAMC,OAAO,GAAG,IAAIR,cAAc,CAACK,CAAC,CAACI,KAAK,EAAEH,SAAS,CAAC;EAEtD,OAAOF,OAAO,CAACM,eAAe,CAACF,OAAO,EAAE,CAACH,CAAC,CAAC,EAAEA,CAAC,CAACM,KAAK,CAAC;AACvD;AAEA,OAAO,IAAMC,UAAU,GAAiB;EACtCC,UAAU,EAAEf,IAAI;EAChBgB,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAEd;CACb","names":["Step","CHECK_NAN_SNIPPET","UnaryOpProgram","step","inputs","attrs","backend","x","opSnippet","alpha","program","shape","runWebGLProgram","dtype","stepConfig","kernelName","backendName","kernelFunc"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\kernels\\Step.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Step, StepAttrs, TensorInfo, UnaryInputs} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {CHECK_NAN_SNIPPET, UnaryOpProgram} from '../unaryop_gpu';\n\nexport function step(\n    {inputs, attrs, backend}:\n        {inputs: UnaryInputs, attrs: StepAttrs, backend: MathBackendWebGL}):\n    TensorInfo {\n  const {x} = inputs;\n  const opSnippet = CHECK_NAN_SNIPPET + `\n    return x > 0.0 ? 1.0 : float(${attrs.alpha});\n  `;\n\n  const program = new UnaryOpProgram(x.shape, opSnippet);\n\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}\n\nexport const stepConfig: KernelConfig = {\n  kernelName: Step,\n  backendName: 'webgl',\n  kernelFunc: step as unknown as KernelFunc,\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}