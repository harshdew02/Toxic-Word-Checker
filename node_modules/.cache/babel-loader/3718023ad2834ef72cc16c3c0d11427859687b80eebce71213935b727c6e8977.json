{"ast":null,"code":"import _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var DepthToSpaceProgram = /*#__PURE__*/function () {\n  function DepthToSpaceProgram(outputShape, blockSize, dataFormat) {\n    _classCallCheck(this, DepthToSpaceProgram);\n    this.variableNames = ['x'];\n    this.outputShape = [];\n    this.outputShape = outputShape;\n    this.blockSize = blockSize;\n    this.dataFormat = dataFormat;\n    this.userCode = \"\\n    void main() {\\n      ivec4 coords = getOutputCoords();\\n      int b = coords[0];\\n      int h = \".concat(this.getHeightCoordString(), \";\\n      int w = \").concat(this.getWidthCoordString(), \";\\n      int d = \").concat(this.getDepthCoordString(), \";\\n\\n      int in_h = h / \").concat(blockSize, \";\\n      int offset_h = imod(h, \").concat(blockSize, \");\\n      int in_w = w / \").concat(blockSize, \";\\n      int offset_w = imod(w, \").concat(blockSize, \");\\n      int offset_d = (offset_h * \").concat(blockSize, \" + offset_w) *\\n        \").concat(this.getOutputDepthSize(), \";\\n      int in_d = d + offset_d;\\n\\n      float result = \").concat(this.getInputSamplingString(), \";\\n      setOutput(result);\\n    }\\n  \");\n  }\n  _createClass(DepthToSpaceProgram, [{\n    key: \"getHeightCoordString\",\n    value: function getHeightCoordString() {\n      if (this.dataFormat === 'NHWC') {\n        return \"coords[1]\";\n      } else {\n        return \"coords[2]\";\n      }\n    }\n  }, {\n    key: \"getWidthCoordString\",\n    value: function getWidthCoordString() {\n      if (this.dataFormat === 'NHWC') {\n        return \"coords[2]\";\n      } else {\n        return \"coords[3]\";\n      }\n    }\n  }, {\n    key: \"getDepthCoordString\",\n    value: function getDepthCoordString() {\n      if (this.dataFormat === 'NHWC') {\n        return \"coords[3]\";\n      } else {\n        return \"coords[1]\";\n      }\n    }\n  }, {\n    key: \"getOutputDepthSize\",\n    value: function getOutputDepthSize() {\n      if (this.dataFormat === 'NHWC') {\n        return this.outputShape[3];\n      } else {\n        return this.outputShape[1];\n      }\n    }\n  }, {\n    key: \"getInputSamplingString\",\n    value: function getInputSamplingString() {\n      if (this.dataFormat === 'NHWC') {\n        return \"getX(b, in_h, in_w, in_d)\";\n      } else {\n        return \"getX(b, in_d, in_h, in_w)\";\n      }\n    }\n  }]);\n  return DepthToSpaceProgram;\n}();","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;AAmBA,WAAaA,mBAAmB;EAO9B,6BACIC,WAAqB,EAAEC,SAAiB,EAAEC,UAAyB;IAAA;IAPvE,kBAAa,GAAG,CAAC,GAAG,CAAC;IACrB,gBAAW,GAAa,EAAE;IAOxB,IAAI,CAACF,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,QAAQ,mHAID,IAAI,CAACC,oBAAoB,EAAE,8BAC3B,IAAI,CAACC,mBAAmB,EAAE,8BAC1B,IAAI,CAACC,mBAAmB,EAAE,uCAEnBL,SAAS,6CACDA,SAAS,sCACjBA,SAAS,6CACDA,SAAS,kDACLA,SAAS,qCAClC,IAAI,CAACM,kBAAkB,EAAE,uEAGZ,IAAI,CAACC,sBAAsB,EAAE,2CAGjD;EACD;EAAC;IAAA;IAAA,OAEO,gCAAoB;MAC1B,IAAI,IAAI,CAACN,UAAU,KAAK,MAAM,EAAE;QAC9B;OACD,MAAM;QACL;;IAEJ;EAAC;IAAA;IAAA,OAEO,+BAAmB;MACzB,IAAI,IAAI,CAACA,UAAU,KAAK,MAAM,EAAE;QAC9B;OACD,MAAM;QACL;;IAEJ;EAAC;IAAA;IAAA,OAEO,+BAAmB;MACzB,IAAI,IAAI,CAACA,UAAU,KAAK,MAAM,EAAE;QAC9B;OACD,MAAM;QACL;;IAEJ;EAAC;IAAA;IAAA,OAEO,8BAAkB;MACxB,IAAI,IAAI,CAACA,UAAU,KAAK,MAAM,EAAE;QAC9B,OAAO,IAAI,CAACF,WAAW,CAAC,CAAC,CAAC;OAC3B,MAAM;QACL,OAAO,IAAI,CAACA,WAAW,CAAC,CAAC,CAAC;;IAE9B;EAAC;IAAA;IAAA,OAEO,kCAAsB;MAC5B,IAAI,IAAI,CAACE,UAAU,KAAK,MAAM,EAAE;QAC9B;OACD,MAAM;QACL;;IAEJ;EAAC;EAAA;AAAA","names":["DepthToSpaceProgram","outputShape","blockSize","dataFormat","userCode","getHeightCoordString","getWidthCoordString","getDepthCoordString","getOutputDepthSize","getInputSamplingString"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\depth_to_space_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class DepthToSpaceProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[] = [];\n  userCode: string;\n  blockSize: number;\n  dataFormat: string;\n\n  constructor(\n      outputShape: number[], blockSize: number, dataFormat: 'NHWC'|'NCHW') {\n    this.outputShape = outputShape;\n    this.blockSize = blockSize;\n    this.dataFormat = dataFormat;\n    this.userCode = `\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${blockSize};\n      int offset_h = imod(h, ${blockSize});\n      int in_w = w / ${blockSize};\n      int offset_w = imod(w, ${blockSize});\n      int offset_d = (offset_h * ${blockSize} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `;\n  }\n\n  private getHeightCoordString(): string {\n    if (this.dataFormat === 'NHWC') {\n      return `coords[1]`;\n    } else {\n      return `coords[2]`;\n    }\n  }\n\n  private getWidthCoordString(): string {\n    if (this.dataFormat === 'NHWC') {\n      return `coords[2]`;\n    } else {\n      return `coords[3]`;\n    }\n  }\n\n  private getDepthCoordString(): string {\n    if (this.dataFormat === 'NHWC') {\n      return `coords[3]`;\n    } else {\n      return `coords[1]`;\n    }\n  }\n\n  private getOutputDepthSize(): number {\n    if (this.dataFormat === 'NHWC') {\n      return this.outputShape[3];\n    } else {\n      return this.outputShape[1];\n    }\n  }\n\n  private getInputSamplingString(): string {\n    if (this.dataFormat === 'NHWC') {\n      return `getX(b, in_h, in_w, in_d)`;\n    } else {\n      return `getX(b, in_d, in_h, in_w)`;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}