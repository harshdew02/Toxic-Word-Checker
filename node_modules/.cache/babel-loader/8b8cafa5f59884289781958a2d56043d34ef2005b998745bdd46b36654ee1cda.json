{"ast":null,"code":"import _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { BrowserIndexedDB, BrowserIndexedDBManager } from '../io/indexed_db';\nimport { BrowserLocalStorage, BrowserLocalStorageManager } from '../io/local_storage';\nimport { ModelStoreManagerRegistry } from '../io/model_management';\nexport var PlatformBrowser = /*#__PURE__*/function () {\n  function PlatformBrowser() {\n    _classCallCheck(this, PlatformBrowser);\n    // For setTimeoutCustom\n    this.messageName = 'setTimeoutCustom';\n    this.functionRefs = [];\n    this.handledMessageCount = 0;\n    this.hasEventListener = false;\n  }\n  _createClass(PlatformBrowser, [{\n    key: \"fetch\",\n    value: function (_fetch) {\n      function fetch(_x, _x2) {\n        return _fetch.apply(this, arguments);\n      }\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n      return fetch;\n    }(function (path, init) {\n      return fetch(path, init);\n    })\n  }, {\n    key: \"now\",\n    value: function now() {\n      return performance.now();\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(text, encoding) {\n      if (encoding !== 'utf-8' && encoding !== 'utf8') {\n        throw new Error(\"Browser's encoder only supports utf-8, but got \".concat(encoding));\n      }\n      if (this.textEncoder == null) {\n        this.textEncoder = new TextEncoder();\n      }\n      return this.textEncoder.encode(text);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(bytes, encoding) {\n      return new TextDecoder(encoding).decode(bytes);\n    }\n    // If the setTimeout nesting level is greater than 5 and timeout is less\n    // than 4ms, timeout will be clamped to 4ms, which hurts the perf.\n    // Interleaving window.postMessage and setTimeout will trick the browser and\n    // avoid the clamp.\n  }, {\n    key: \"setTimeoutCustom\",\n    value: function setTimeoutCustom(functionRef, delay) {\n      var _this = this;\n      if (typeof window === 'undefined' || !env().getBool('USE_SETTIMEOUTCUSTOM')) {\n        setTimeout(functionRef, delay);\n        return;\n      }\n      this.functionRefs.push(functionRef);\n      setTimeout(function () {\n        window.postMessage({\n          name: _this.messageName,\n          index: _this.functionRefs.length - 1\n        }, '*');\n      }, delay);\n      if (!this.hasEventListener) {\n        this.hasEventListener = true;\n        window.addEventListener('message', function (event) {\n          if (event.source === window && event.data.name === _this.messageName) {\n            event.stopPropagation();\n            var _functionRef = _this.functionRefs[event.data.index];\n            _functionRef();\n            _this.handledMessageCount++;\n            if (_this.handledMessageCount === _this.functionRefs.length) {\n              _this.functionRefs = [];\n              _this.handledMessageCount = 0;\n            }\n          }\n        }, true);\n      }\n    }\n  }, {\n    key: \"isTypedArray\",\n    value: function isTypedArray(a) {\n      return a instanceof Float32Array || a instanceof Int32Array || a instanceof Uint8Array || a instanceof Uint8ClampedArray;\n    }\n  }]);\n  return PlatformBrowser;\n}();\nif (env().get('IS_BROWSER')) {\n  env().setPlatform('browser', new PlatformBrowser());\n  // Register LocalStorage IOHandler\n  try {\n    ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\n  } catch (err) {}\n  // Register IndexedDB IOHandler\n  try {\n    ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\n  } catch (err) {}\n}","map":{"version":3,"mappings":"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","names":["env","BrowserIndexedDB","BrowserIndexedDBManager","BrowserLocalStorage","BrowserLocalStorageManager","ModelStoreManagerRegistry","PlatformBrowser","path","init","fetch","performance","now","text","encoding","Error","textEncoder","TextEncoder","encode","bytes","TextDecoder","decode","functionRef","delay","window","getBool","setTimeout","functionRefs","push","postMessage","name","messageName","index","length","hasEventListener","addEventListener","event","source","data","stopPropagation","handledMessageCount","a","Float32Array","Int32Array","Uint8Array","Uint8ClampedArray","get","setPlatform","registerManager","URL_SCHEME","err"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-core\\src\\platforms\\platform_browser.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport '../flags';\n\nimport {env} from '../environment';\nimport {BrowserIndexedDB, BrowserIndexedDBManager} from '../io/indexed_db';\nimport {BrowserLocalStorage, BrowserLocalStorageManager} from '../io/local_storage';\nimport {ModelStoreManagerRegistry} from '../io/model_management';\n\nimport {Platform} from './platform';\n\nexport class PlatformBrowser implements Platform {\n  // According to the spec, the built-in encoder can do only UTF-8 encoding.\n  // https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder/TextEncoder\n  private textEncoder: TextEncoder;\n\n  // For setTimeoutCustom\n  private readonly messageName = 'setTimeoutCustom';\n  private functionRefs: Function[] = [];\n  private handledMessageCount = 0;\n  private hasEventListener = false;\n\n  fetch(path: string, init?: RequestInit): Promise<Response> {\n    return fetch(path, init);\n  }\n\n  now(): number {\n    return performance.now();\n  }\n\n  encode(text: string, encoding: string): Uint8Array {\n    if (encoding !== 'utf-8' && encoding !== 'utf8') {\n      throw new Error(\n          `Browser's encoder only supports utf-8, but got ${encoding}`);\n    }\n    if (this.textEncoder == null) {\n      this.textEncoder = new TextEncoder();\n    }\n    return this.textEncoder.encode(text);\n  }\n  decode(bytes: Uint8Array, encoding: string): string {\n    return new TextDecoder(encoding).decode(bytes);\n  }\n\n  // If the setTimeout nesting level is greater than 5 and timeout is less\n  // than 4ms, timeout will be clamped to 4ms, which hurts the perf.\n  // Interleaving window.postMessage and setTimeout will trick the browser and\n  // avoid the clamp.\n  setTimeoutCustom(functionRef: Function, delay: number): void {\n    if (typeof window === 'undefined' ||\n        !env().getBool('USE_SETTIMEOUTCUSTOM')) {\n      setTimeout(functionRef, delay);\n      return;\n    }\n\n    this.functionRefs.push(functionRef);\n    setTimeout(() => {\n      window.postMessage(\n          {name: this.messageName, index: this.functionRefs.length - 1}, '*');\n    }, delay);\n\n    if (!this.hasEventListener) {\n      this.hasEventListener = true;\n      window.addEventListener('message', (event: MessageEvent) => {\n        if (event.source === window && event.data.name === this.messageName) {\n          event.stopPropagation();\n          const functionRef = this.functionRefs[event.data.index];\n          functionRef();\n          this.handledMessageCount++;\n          if (this.handledMessageCount === this.functionRefs.length) {\n            this.functionRefs = [];\n            this.handledMessageCount = 0;\n          }\n        }\n      }, true);\n    }\n  }\n\n  isTypedArray(a: unknown): a is Uint8Array | Float32Array | Int32Array\n    | Uint8ClampedArray {\n    return a instanceof Float32Array || a instanceof Int32Array ||\n      a instanceof Uint8Array || a instanceof Uint8ClampedArray;\n  }\n}\n\nif (env().get('IS_BROWSER')) {\n  env().setPlatform('browser', new PlatformBrowser());\n\n  // Register LocalStorage IOHandler\n  try {\n    ModelStoreManagerRegistry.registerManager(\n        BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\n  } catch (err) {\n  }\n\n  // Register IndexedDB IOHandler\n  try {\n    ModelStoreManagerRegistry.registerManager(\n        BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\n  } catch (err) {\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}