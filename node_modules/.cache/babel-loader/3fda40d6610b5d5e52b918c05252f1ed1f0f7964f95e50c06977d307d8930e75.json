{"ast":null,"code":"import _toConsumableArray from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot, util } from '@tensorflow/tfjs-core';\nimport { OneHotProgram } from '../onehot_gpu';\nimport { reshape } from './Reshape';\nexport var oneHot = function oneHot(args) {\n  var inputs = args.inputs,\n    backend = args.backend,\n    attrs = args.attrs;\n  var indices = inputs.indices;\n  var dtype = attrs.dtype,\n    depth = attrs.depth,\n    onValue = attrs.onValue,\n    offValue = attrs.offValue;\n  var indicesSize = util.sizeFromShape(indices.shape);\n  var program = new OneHotProgram(indicesSize, depth, onValue, offValue);\n  var reshaped = reshape({\n    inputs: {\n      x: indices\n    },\n    backend: backend,\n    attrs: {\n      shape: [indicesSize]\n    }\n  });\n  var result = backend.runWebGLProgram(program, [reshaped], dtype);\n  backend.disposeIntermediateTensorInfo(reshaped);\n  var outShape = [].concat(_toConsumableArray(indices.shape), [depth]);\n  var out = reshape({\n    inputs: {\n      x: result\n    },\n    backend: backend,\n    attrs: {\n      shape: outShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(result);\n  return out;\n};\nexport var oneHotConfig = {\n  kernelName: OneHot,\n  backendName: 'webgl',\n  kernelFunc: oneHot\n};","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,MAAM,EAAyCC,IAAI,QAAO,uBAAuB;AAGnH,SAAQC,aAAa,QAAO,eAAe;AAC3C,SAAQC,OAAO,QAAO,WAAW;AAEjC,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAM,CAAIC,IAItB,EAAgB;EACf,IAAOC,MAAM,GAAoBD,IAAI,CAA9BC,MAAM;IAAEC,OAAO,GAAWF,IAAI,CAAtBE,OAAO;IAAEC,KAAK,GAAIH,IAAI,CAAbG,KAAK;EAC7B,IAAOC,OAAO,GAAIH,MAAM,CAAjBG,OAAO;EACd,IAAOC,KAAK,GAA8BF,KAAK,CAAxCE,KAAK;IAAEC,KAAK,GAAuBH,KAAK,CAAjCG,KAAK;IAAEC,OAAO,GAAcJ,KAAK,CAA1BI,OAAO;IAAEC,QAAQ,GAAIL,KAAK,CAAjBK,QAAQ;EAEtC,IAAMC,WAAW,GAAGb,IAAI,CAACc,aAAa,CAACN,OAAO,CAACO,KAAK,CAAC;EACrD,IAAMC,OAAO,GAAG,IAAIf,aAAa,CAACY,WAAW,EAAEH,KAAK,EAAEC,OAAO,EAAEC,QAAQ,CAAC;EACxE,IAAMK,QAAQ,GACVf,OAAO,CAAC;IAACG,MAAM,EAAE;MAACa,CAAC,EAAEV;IAAO,CAAC;IAAEF,OAAO,EAAPA,OAAO;IAAEC,KAAK,EAAE;MAACQ,KAAK,EAAE,CAACF,WAAW;IAAC;EAAC,CAAC,CAAC;EAC3E,IAAMM,MAAM,GAAGb,OAAO,CAACc,eAAe,CAACJ,OAAO,EAAE,CAACC,QAAQ,CAAC,EAAER,KAAK,CAAC;EAClEH,OAAO,CAACe,6BAA6B,CAACJ,QAAQ,CAAC;EAE/C,IAAMK,QAAQ,gCAAOd,OAAO,CAACO,KAAK,IAAEL,KAAK,EAAC;EAC1C,IAAMa,GAAG,GAAGrB,OAAO,CAAC;IAACG,MAAM,EAAE;MAACa,CAAC,EAAEC;IAAM,CAAC;IAAEb,OAAO,EAAPA,OAAO;IAAEC,KAAK,EAAE;MAACQ,KAAK,EAAEO;IAAQ;EAAC,CAAC,CAAC;EAC7EhB,OAAO,CAACe,6BAA6B,CAACF,MAAM,CAAC;EAC7C,OAAOI,GAAG;AACZ,CAAC;AAED,OAAO,IAAMC,YAAY,GAAiB;EACxCC,UAAU,EAAE1B,MAAM;EAClB2B,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAExB;CACb","names":["OneHot","util","OneHotProgram","reshape","oneHot","args","inputs","backend","attrs","indices","dtype","depth","onValue","offValue","indicesSize","sizeFromShape","shape","program","reshaped","x","result","runWebGLProgram","disposeIntermediateTensorInfo","outShape","out","oneHotConfig","kernelName","backendName","kernelFunc"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\kernels\\OneHot.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OneHot, OneHotAttrs, OneHotInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {OneHotProgram} from '../onehot_gpu';\nimport {reshape} from './Reshape';\n\nexport const oneHot = (args: {\n  inputs: OneHotInputs,\n  backend: MathBackendWebGL,\n  attrs: OneHotAttrs\n}): TensorInfo => {\n  const {inputs, backend, attrs} = args;\n  const {indices} = inputs;\n  const {dtype, depth, onValue, offValue} = attrs;\n\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const program = new OneHotProgram(indicesSize, depth, onValue, offValue);\n  const reshaped =\n      reshape({inputs: {x: indices}, backend, attrs: {shape: [indicesSize]}});\n  const result = backend.runWebGLProgram(program, [reshaped], dtype);\n  backend.disposeIntermediateTensorInfo(reshaped);\n\n  const outShape = [...indices.shape, depth];\n  const out = reshape({inputs: {x: result}, backend, attrs: {shape: outShape}});\n  backend.disposeIntermediateTensorInfo(result);\n  return out;\n};\n\nexport const oneHotConfig: KernelConfig = {\n  kernelName: OneHot,\n  backendName: 'webgl',\n  kernelFunc: oneHot as unknown as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}