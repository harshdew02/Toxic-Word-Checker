{"ast":null,"code":"import _slicedToArray from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Prelu } from '../kernel_names';\nimport { getReductionAxes } from '../ops/broadcast_util';\nimport { greater } from '../ops/greater';\nimport { mul } from '../ops/mul';\nimport { reshape } from '../ops/reshape';\nimport { sum } from '../ops/sum';\nimport { where } from '../ops/where';\nimport { zerosLike } from '../ops/zeros_like';\nexport var preluGradConfig = {\n  kernelName: Prelu,\n  inputsToSave: ['x', 'alpha'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n      x = _saved[0],\n      _alpha = _saved[1];\n    var mask = greater(x, 0);\n    return {\n      x: function x() {\n        return where(mask, dy, mul(dy, _alpha));\n      },\n      alpha: function alpha() {\n        var res = where(mask, zerosLike(dy), mul(dy, x));\n        var reduceAxes = getReductionAxes(_alpha.shape, dy.shape);\n        if (reduceAxes.length > 0) {\n          res = sum(res, reduceAxes);\n        }\n        return reshape(res, _alpha.shape);\n      }\n    };\n  }\n};","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,KAAK,QAAO,iBAAiB;AAErC,SAAQC,gBAAgB,QAAO,uBAAuB;AACtD,SAAQC,OAAO,QAAO,gBAAgB;AACtC,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,OAAO,QAAO,gBAAgB;AACtC,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,KAAK,QAAO,cAAc;AAClC,SAAQC,SAAS,QAAO,mBAAmB;AAG3C,OAAO,IAAMC,eAAe,GAAe;EACzCC,UAAU,EAAET,KAAK;EACjBU,YAAY,EAAE,CAAC,GAAG,EAAE,OAAO,CAAC;EAC5BC,QAAQ,EAAE,kBAACC,EAAU,EAAEC,KAAe,EAAI;IACxC,4BAAmBA,KAAK;MAAjBC,CAAC;MAAEC,MAAK;IACf,IAAMC,IAAI,GAAGd,OAAO,CAACY,CAAC,EAAE,CAAC,CAAC;IAE1B,OAAO;MACLA,CAAC,EAAE;QAAA,OAAMR,KAAK,CAACU,IAAI,EAAEJ,EAAE,EAAET,GAAG,CAACS,EAAE,EAAEG,MAAK,CAAC,CAAC;MAAA;MACxCA,KAAK,EAAE,iBAAK;QACV,IAAIE,GAAG,GAAGX,KAAK,CAACU,IAAI,EAAET,SAAS,CAACK,EAAE,CAAC,EAAET,GAAG,CAACS,EAAE,EAAEE,CAAC,CAAC,CAAC;QAChD,IAAMI,UAAU,GAAGjB,gBAAgB,CAACc,MAAK,CAACI,KAAK,EAAEP,EAAE,CAACO,KAAK,CAAC;QAC1D,IAAID,UAAU,CAACE,MAAM,GAAG,CAAC,EAAE;UACzBH,GAAG,GAAGZ,GAAG,CAACY,GAAG,EAAEC,UAAU,CAAC;;QAE5B,OAAOd,OAAO,CAACa,GAAG,EAAEF,MAAK,CAACI,KAAK,CAAC;MAClC;KACD;EACH;CACD","names":["Prelu","getReductionAxes","greater","mul","reshape","sum","where","zerosLike","preluGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","x","alpha","mask","res","reduceAxes","shape","length"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\Toxic-Word-Checker\\node_modules\\@tensorflow\\tfjs-core\\src\\gradients\\Prelu_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Prelu} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {getReductionAxes} from '../ops/broadcast_util';\nimport {greater} from '../ops/greater';\nimport {mul} from '../ops/mul';\nimport {reshape} from '../ops/reshape';\nimport {sum} from '../ops/sum';\nimport {where} from '../ops/where';\nimport {zerosLike} from '../ops/zeros_like';\nimport {Tensor} from '../tensor';\n\nexport const preluGradConfig: GradConfig = {\n  kernelName: Prelu,\n  inputsToSave: ['x', 'alpha'],\n  gradFunc: (dy: Tensor, saved: Tensor[]) => {\n    const [x, alpha] = saved;\n    const mask = greater(x, 0);\n\n    return {\n      x: () => where(mask, dy, mul(dy, alpha)),\n      alpha: () => {\n        let res = where(mask, zerosLike(dy), mul(dy, x));\n        const reduceAxes = getReductionAxes(alpha.shape, dy.shape);\n        if (reduceAxes.length > 0) {\n          res = sum(res, reduceAxes);\n        }\n        return reshape(res, alpha.shape);\n      }\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}