{"ast":null,"code":"import _slicedToArray from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ClipByValue } from '../kernel_names';\nimport { greaterEqual } from '../ops/greater_equal';\nimport { lessEqual } from '../ops/less_equal';\nimport { logicalAnd } from '../ops/logical_and';\nimport { where } from '../ops/where';\nimport { zerosLike } from '../ops/zeros_like';\nexport var clipByValueGradConfig = {\n  kernelName: ClipByValue,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n      _x = _saved[0];\n    var clipValueMin = attrs.clipValueMin,\n      clipValueMax = attrs.clipValueMax;\n    return {\n      x: function x() {\n        return where(logicalAnd(greaterEqual(_x, clipValueMin), lessEqual(_x, clipValueMax)), dy, zerosLike(dy));\n      }\n    };\n  }\n};","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,WAAW,QAAyB,iBAAiB;AAE7D,SAAQC,YAAY,QAAO,sBAAsB;AACjD,SAAQC,SAAS,QAAO,mBAAmB;AAC3C,SAAQC,UAAU,QAAO,oBAAoB;AAC7C,SAAQC,KAAK,QAAO,cAAc;AAClC,SAAQC,SAAS,QAAO,mBAAmB;AAG3C,OAAO,IAAMC,qBAAqB,GAAe;EAC/CC,UAAU,EAAEP,WAAW;EACvBQ,YAAY,EAAE,CAAC,GAAG,CAAC;EACnBC,QAAQ,EAAE,kBAACC,EAAU,EAAEC,KAAe,EAAEC,KAAmB,EAAI;IAC7D,4BAAYD,KAAK;MAAVE,EAAC;IACR,IAAOC,YAAY,GAAkBF,KAAoC,CAAlEE,YAAY;MAAEC,YAAY,GAAIH,KAAoC,CAApDG,YAAY;IACjC,OAAO;MACLF,CAAC,EAAE;QAAA,OAAMT,KAAK,CACVD,UAAU,CAACF,YAAY,CAACY,EAAC,EAAEC,YAAY,CAAC,EAAEZ,SAAS,CAACW,EAAC,EAAEE,YAAY,CAAC,CAAC,EACrEL,EAAE,EAAEL,SAAS,CAACK,EAAE,CAAC,CAAC;MAAA;KACvB;EACH;CACD","names":["ClipByValue","greaterEqual","lessEqual","logicalAnd","where","zerosLike","clipByValueGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","x","clipValueMin","clipValueMax"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\Toxic-Word-Checker\\node_modules\\@tensorflow\\tfjs-core\\src\\gradients\\ClipByValue_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ClipByValue, ClipByValueAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {greaterEqual} from '../ops/greater_equal';\nimport {lessEqual} from '../ops/less_equal';\nimport {logicalAnd} from '../ops/logical_and';\nimport {where} from '../ops/where';\nimport {zerosLike} from '../ops/zeros_like';\nimport {Tensor} from '../tensor';\n\nexport const clipByValueGradConfig: GradConfig = {\n  kernelName: ClipByValue,\n  inputsToSave: ['x'],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x] = saved;\n    const {clipValueMin, clipValueMax} = attrs as unknown as ClipByValueAttrs;\n    return {\n      x: () => where(\n          logicalAnd(greaterEqual(x, clipValueMin), lessEqual(x, clipValueMax)),\n          dy, zerosLike(dy)),\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}