{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, MirrorPad } from '@tensorflow/tfjs-core';\nimport { MirrorPadProgram } from '../mirror_pad_gpu';\nimport { MirrorPadPackedProgram } from '../mirror_pad_packed_gpu';\nexport var mirrorPadKernelFunc = function mirrorPadKernelFunc(_ref) {\n  var inputs = _ref.inputs,\n    backend = _ref.backend,\n    attrs = _ref.attrs;\n  var x = inputs.x;\n  var paddings = attrs.paddings,\n    mode = attrs.mode;\n  var program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ? new MirrorPadPackedProgram(x.shape, paddings, mode) : new MirrorPadProgram(x.shape, paddings, mode);\n  var output = backend.runWebGLProgram(program, [x], x.dtype);\n  return output;\n};\nexport var mirrorPadConfig = {\n  kernelName: MirrorPad,\n  backendName: 'webgl',\n  kernelFunc: mirrorPadKernelFunc\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,GAAG,EAA4BC,SAAS,QAAoD,uBAAuB;AAG3H,SAAQC,gBAAgB,QAAO,mBAAmB;AAClD,SAAQC,sBAAsB,QAAO,0BAA0B;AAE/D,OAAO,IAAMC,mBAAmB,GAIb,SAJNA,mBAAmB,OAIgB;EAAA,IAA3BC,MAAM,QAANA,MAAM;IAAEC,OAAO,QAAPA,OAAO;IAAEC,KAAK,QAALA,KAAK;EACzC,IAAOC,CAAC,GAAIH,MAAM,CAAXG,CAAC;EACR,IAAOC,QAAQ,GAAUF,KAAK,CAAvBE,QAAQ;IAAEC,IAAI,GAAIH,KAAK,CAAbG,IAAI;EAErB,IAAMC,OAAO,GAAGX,GAAG,EAAE,CAACY,OAAO,CAAC,6BAA6B,CAAC,GACxD,IAAIT,sBAAsB,CAACK,CAAC,CAACK,KAAK,EAAEJ,QAAQ,EAAEC,IAAI,CAAC,GACnD,IAAIR,gBAAgB,CAACM,CAAC,CAACK,KAAK,EAAEJ,QAAQ,EAAEC,IAAI,CAAC;EAEjD,IAAMI,MAAM,GAAGR,OAAO,CAACS,eAAe,CAACJ,OAAO,EAAE,CAACH,CAAC,CAAC,EAAEA,CAAC,CAACQ,KAAK,CAAC;EAE7D,OAAOF,MAAM;AACf,CAAC;AAED,OAAO,IAAMG,eAAe,GAAiB;EAC3CC,UAAU,EAAEjB,SAAS;EACrBkB,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAEhB;CACb","names":["env","MirrorPad","MirrorPadProgram","MirrorPadPackedProgram","mirrorPadKernelFunc","inputs","backend","attrs","x","paddings","mode","program","getBool","shape","output","runWebGLProgram","dtype","mirrorPadConfig","kernelName","backendName","kernelFunc"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\kernels\\MirrorPad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env, KernelConfig, KernelFunc, MirrorPad, MirrorPadAttrs, MirrorPadInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {MirrorPadProgram} from '../mirror_pad_gpu';\nimport {MirrorPadPackedProgram} from '../mirror_pad_packed_gpu';\n\nexport const mirrorPadKernelFunc: (params: {\n  inputs: MirrorPadInputs,\n  backend: MathBackendWebGL,\n  attrs: MirrorPadAttrs\n}) => TensorInfo = ({inputs, backend, attrs}) => {\n  const {x} = inputs;\n  const {paddings, mode} = attrs;\n\n  const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n      new MirrorPadPackedProgram(x.shape, paddings, mode) :\n      new MirrorPadProgram(x.shape, paddings, mode);\n\n  const output = backend.runWebGLProgram(program, [x], x.dtype);\n\n  return output;\n};\n\nexport const mirrorPadConfig: KernelConfig = {\n  kernelName: MirrorPad,\n  backendName: 'webgl',\n  kernelFunc: mirrorPadKernelFunc as unknown as KernelFunc,\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}