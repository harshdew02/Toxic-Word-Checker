{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, BroadcastArgs } from '@tensorflow/tfjs-core';\nexport function broadcastArgs(args) {\n  var inputs = args.inputs,\n    backend = args.backend;\n  var s0 = inputs.s0,\n    s1 = inputs.s1;\n  var s0Vals = backend.data.get(s0.dataId).values;\n  var s1Vals = backend.data.get(s1.dataId).values;\n  var broadcastShape = backend_util.assertAndGetBroadcastShape(Array.from(s0Vals), Array.from(s1Vals));\n  return backend.makeTensorInfo([broadcastShape.length], 'int32', Int32Array.from(broadcastShape));\n}\nexport var broadcastArgsConfig = {\n  kernelName: BroadcastArgs,\n  backendName: 'cpu',\n  kernelFunc: broadcastArgs\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,EAAEC,aAAa,QAAkE,uBAAuB;AAI5H,OAAM,SAAUC,aAAa,CAACC,IAG7B;EACC,IAAOC,MAAM,GAAaD,IAAI,CAAvBC,MAAM;IAAEC,OAAO,GAAIF,IAAI,CAAfE,OAAO;EACtB,IAAOC,EAAE,GAAQF,MAAM,CAAhBE,EAAE;IAAEC,EAAE,GAAIH,MAAM,CAAZG,EAAE;EAEb,IAAMC,MAAM,GAAGH,OAAO,CAACI,IAAI,CAACC,GAAG,CAACJ,EAAE,CAACK,MAAM,CAAC,CAACC,MAAoB;EAC/D,IAAMC,MAAM,GAAGR,OAAO,CAACI,IAAI,CAACC,GAAG,CAACH,EAAE,CAACI,MAAM,CAAC,CAACC,MAAoB;EAE/D,IAAME,cAAc,GAAGd,YAAY,CAACe,0BAA0B,CAC1DC,KAAK,CAACC,IAAI,CAACT,MAAM,CAAC,EAAEQ,KAAK,CAACC,IAAI,CAACJ,MAAM,CAAC,CAAC;EAE3C,OAAOR,OAAO,CAACa,cAAc,CACzB,CAACJ,cAAc,CAACK,MAAM,CAAC,EAAE,OAAO,EAAEC,UAAU,CAACH,IAAI,CAACH,cAAc,CAAC,CAAC;AACxE;AAEA,OAAO,IAAMO,mBAAmB,GAAiB;EAC/CC,UAAU,EAAErB,aAAa;EACzBsB,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAEtB;CACb","names":["backend_util","BroadcastArgs","broadcastArgs","args","inputs","backend","s0","s1","s0Vals","data","get","dataId","values","s1Vals","broadcastShape","assertAndGetBroadcastShape","Array","from","makeTensorInfo","length","Int32Array","broadcastArgsConfig","kernelName","backendName","kernelFunc"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-cpu\\src\\kernels\\BroadcastArgs.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BroadcastArgs, BroadcastArgsInputs, KernelConfig, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport function broadcastArgs(args: {\n  inputs: BroadcastArgsInputs,\n  backend: MathBackendCPU,\n}): TensorInfo {\n  const {inputs, backend} = args;\n  const {s0, s1} = inputs;\n\n  const s0Vals = backend.data.get(s0.dataId).values as TypedArray;\n  const s1Vals = backend.data.get(s1.dataId).values as TypedArray;\n\n  const broadcastShape = backend_util.assertAndGetBroadcastShape(\n      Array.from(s0Vals), Array.from(s1Vals));\n\n  return backend.makeTensorInfo(\n      [broadcastShape.length], 'int32', Int32Array.from(broadcastShape));\n}\n\nexport const broadcastArgsConfig: KernelConfig = {\n  kernelName: BroadcastArgs,\n  backendName: 'cpu',\n  kernelFunc: broadcastArgs\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}