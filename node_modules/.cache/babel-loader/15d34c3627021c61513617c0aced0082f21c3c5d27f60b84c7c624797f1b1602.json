{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Real } from '@tensorflow/tfjs-core';\nexport function real(args) {\n  var inputs = args.inputs,\n    backend = args.backend;\n  var input = inputs.input;\n  var real = backend.data.get(input.dataId).complexTensorInfos.real;\n  var realVal = backend.data.get(real.dataId).values;\n  // When complex tensor is disposed, its underlying parts will be disposed too.\n  // Make new tensor out of the real value of the complex. This makes sure the\n  // value is still accessible even if complex tensor is disposed.\n  return backend.makeTensorInfo(real.shape, real.dtype, realVal);\n}\nexport var realConfig = {\n  kernelName: Real,\n  backendName: 'cpu',\n  kernelFunc: real\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,IAAI,QAA+B,uBAAuB;AAI5F,OAAM,SAAUC,IAAI,CAACC,IAAmD;EAEtE,IAAOC,MAAM,GAAaD,IAAI,CAAvBC,MAAM;IAAEC,OAAO,GAAIF,IAAI,CAAfE,OAAO;EACtB,IAAOC,KAAK,GAAIF,MAAM,CAAfE,KAAK;EAEZ,IAAMJ,IAAI,GAAGG,OAAO,CAACE,IAAI,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAAC,CAACC,kBAAkB,CAACR,IAAI;EACnE,IAAMS,OAAO,GAAGN,OAAO,CAACE,IAAI,CAACC,GAAG,CAACN,IAAI,CAACO,MAAM,CAAC,CAACG,MAAM;EAEpD;EACA;EACA;EACA,OAAOP,OAAO,CAACQ,cAAc,CAACX,IAAI,CAACY,KAAK,EAAEZ,IAAI,CAACa,KAAK,EAAEJ,OAAO,CAAC;AAChE;AAEA,OAAO,IAAMK,UAAU,GAAiB;EACtCC,UAAU,EAAEhB,IAAI;EAChBiB,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAEjB;CACb","names":["Real","real","args","inputs","backend","input","data","get","dataId","complexTensorInfos","realVal","values","makeTensorInfo","shape","dtype","realConfig","kernelName","backendName","kernelFunc"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\Toxic-Word-Checker\\node_modules\\@tensorflow\\tfjs-backend-cpu\\src\\kernels\\Real.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Real, RealInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport function real(args: {inputs: RealInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {input} = inputs;\n\n  const real = backend.data.get(input.dataId).complexTensorInfos.real;\n  const realVal = backend.data.get(real.dataId).values;\n\n  // When complex tensor is disposed, its underlying parts will be disposed too.\n  // Make new tensor out of the real value of the complex. This makes sure the\n  // value is still accessible even if complex tensor is disposed.\n  return backend.makeTensorInfo(real.shape, real.dtype, realVal);\n}\n\nexport const realConfig: KernelConfig = {\n  kernelName: Real,\n  backendName: 'cpu',\n  kernelFunc: real as unknown as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}