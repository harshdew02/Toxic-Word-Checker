{"ast":null,"code":"import _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { useShapeUniforms } from './gpgpu_math';\nexport var MatMulPackedProgram = /*#__PURE__*/_createClass(function MatMulPackedProgram(aShape, bShape, outputShape) {\n  var transposeA = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var transposeB = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var addBias = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var activation = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  var hasPreluActivation = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n  var hasLeakyreluActivation = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n  _classCallCheck(this, MatMulPackedProgram);\n  this.variableNames = ['matrixA', 'matrixB'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outputShape = outputShape;\n  this.enableShapeUniforms = useShapeUniforms(this.outputShape.length);\n  var sharedDim = transposeA ? aShape[1] : aShape[2];\n  var sharedDimensionPacked = Math.ceil(sharedDim / 2);\n  var aSample = transposeA ? 'i * 2, rc.y' : 'rc.y, i * 2';\n  var bSample = transposeB ? 'rc.z, i * 2' : 'i * 2, rc.z';\n  var aSwizzle = transposeA ? ['a.xxyy', 'a.zzww'] : ['a.xxzz', 'a.yyww'];\n  var bSwizzle = transposeB ? ['b.xzxz', 'b.ywyw'] : ['b.xyxy', 'b.zwzw'];\n  var activationSnippet = '',\n    applyActivationSnippet = '';\n  if (activation) {\n    if (hasPreluActivation) {\n      activationSnippet = \"vec4 activation(vec4 a) {\\n          vec4 b = getPreluActivationWeightsAtOutCoords();\\n          \".concat(activation, \"\\n        }\");\n    } else if (hasLeakyreluActivation) {\n      activationSnippet = \"vec4 activation(vec4 a) {\\n          vec4 b = getLeakyreluAlphaAtOutCoords();\\n          \".concat(activation, \"\\n        }\");\n    } else {\n      activationSnippet = \"vec4 activation(vec4 x) {\\n          \".concat(activation, \"\\n        }\");\n    }\n    applyActivationSnippet = \"result = activation(result);\";\n  }\n  var addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n  if (addBias) {\n    this.variableNames.push('bias');\n  }\n  if (hasPreluActivation) {\n    this.variableNames.push('preluActivationWeights');\n  }\n  if (hasLeakyreluActivation) {\n    this.variableNames.push('leakyreluAlpha');\n  }\n  var batchASnippet = 'rc.x';\n  var batchBSnippet = 'rc.x';\n  if (aShape[0] < bShape[0]) {\n    batchASnippet = \"imod(rc.x, \".concat(aShape[0], \")\");\n  } else if (bShape[0] < aShape[0]) {\n    batchBSnippet = \"imod(rc.x, \".concat(bShape[0], \")\");\n  }\n  this.userCode = \"\\n      \".concat(activationSnippet, \"\\n      // Don't use uniform for sharedDimensionPacked for performance.\\n      const float sharedDimension = \").concat(sharedDimensionPacked, \".0;\\n\\n      vec4 dot2x2ARowBCol(ivec3 rc) {\\n        vec4 result = vec4(0);\\n        int batchA = \").concat(batchASnippet, \";\\n        int batchB = \").concat(batchBSnippet, \";\\n        for (int i = 0; i < \").concat(sharedDimensionPacked, \"; i++) {\\n          vec4 a = getMatrixA(batchA, \").concat(aSample, \");\\n          vec4 b = getMatrixB(batchB, \").concat(bSample, \");\\n\\n          // These swizzled products need to be separately added.\\n          // See: https://github.com/tensorflow/tfjs/issues/1735\\n          result += (\").concat(aSwizzle[0], \" * \").concat(bSwizzle[0], \");\\n          result += (\").concat(aSwizzle[1], \" * \").concat(bSwizzle[1], \");\\n        }\\n        return result;\\n      }\\n\\n      void main() {\\n        ivec3 rc = getOutputCoords();\\n        vec4 result = dot2x2ARowBCol(rc);\\n\\n        \").concat(addBiasSnippet, \"\\n\\n        \").concat(applyActivationSnippet, \"\\n\\n        setOutput(result);\\n      }\\n    \");\n});","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;AAiBA,SAAsBA,gBAAgB,QAAO,cAAc;AAE3D,WAAaC,mBAAmB,6BAQ9B,6BACIC,MAAgC,EAAEC,MAAgC,EAClEC,WAAqC,EAEqB;EAAA,IAFnBC,UAAU,uEAAG,KAAK;EAAA,IACzDC,UAAU,uEAAG,KAAK;EAAA,IAAEC,OAAO,uEAAG,KAAK;EAAA,IAAEC,iFAAqB,IAAI;EAAA,IAC9DC,kBAAkB,uEAAG,KAAK;EAAA,IAAEC,sBAAsB,uEAAG,KAAK;EAAA;EAX9D,kBAAa,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;EACtC,iBAAY,GAAG,IAAI;EACnB,iBAAY,GAAG,IAAI;EAUjB,IAAI,CAACN,WAAW,GAAGA,WAAW;EAC9B,IAAI,CAACO,mBAAmB,GAAGX,gBAAgB,CAAC,IAAI,CAACI,WAAW,CAACQ,MAAM,CAAC;EAEpE,IAAMC,SAAS,GAAGR,UAAU,GAAGH,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;EACpD,IAAMY,qBAAqB,GAAGC,IAAI,CAACC,IAAI,CAACH,SAAS,GAAG,CAAC,CAAC;EAEtD,IAAMI,OAAO,GAAGZ,UAAU,GAAG,aAAa,GAAG,aAAa;EAC1D,IAAMa,OAAO,GAAGZ,UAAU,GAAG,aAAa,GAAG,aAAa;EAC1D,IAAMa,QAAQ,GAAGd,UAAU,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC;EACzE,IAAMe,QAAQ,GAAGd,UAAU,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC;EAEzE,IAAIe,iBAAiB,GAAG,EAAE;IAAEC,sBAAsB,GAAG,EAAE;EACvD,IAAId,UAAU,EAAE;IACd,IAAIC,kBAAkB,EAAE;MACtBY,iBAAiB,8GAEbb,UAAU,gBACZ;KACH,MAAM,IAAIE,sBAAsB,EAAE;MACjCW,iBAAiB,sGAEbb,UAAU,gBACZ;KACH,MAAM;MACLa,iBAAiB,kDACbb,UAAU,gBACZ;;IAGJc,sBAAsB,iCAAiC;;EAGzD,IAAMC,cAAc,GAAGhB,OAAO,GAAG,iCAAiC,GAAG,EAAE;EACvE,IAAIA,OAAO,EAAE;IACX,IAAI,CAACiB,aAAa,CAACC,IAAI,CAAC,MAAM,CAAC;;EAGjC,IAAIhB,kBAAkB,EAAE;IACtB,IAAI,CAACe,aAAa,CAACC,IAAI,CAAC,wBAAwB,CAAC;;EAGnD,IAAIf,sBAAsB,EAAE;IAC1B,IAAI,CAACc,aAAa,CAACC,IAAI,CAAC,gBAAgB,CAAC;;EAG3C,IAAIC,aAAa,GAAG,MAAM;EAC1B,IAAIC,aAAa,GAAG,MAAM;EAC1B,IAAIzB,MAAM,CAAC,CAAC,CAAC,GAAGC,MAAM,CAAC,CAAC,CAAC,EAAE;IACzBuB,aAAa,wBAAiBxB,MAAM,CAAC,CAAC,CAAC,MAAG;GAC3C,MAAM,IAAIC,MAAM,CAAC,CAAC,CAAC,GAAGD,MAAM,CAAC,CAAC,CAAC,EAAE;IAChCyB,aAAa,wBAAiBxB,MAAM,CAAC,CAAC,CAAC,MAAG;;EAG5C,IAAI,CAACyB,QAAQ,qBACTP,iBAAiB,0HAEaP,qBAAqB,gHAIpCY,aAAa,qCACbC,aAAa,4CACNb,qBAAqB,6DACXG,OAAO,uDACPC,OAAO,6KAIxBC,QAAQ,CAAC,CAAC,CAAC,gBAAMC,QAAQ,CAAC,CAAC,CAAC,sCAC5BD,QAAQ,CAAC,CAAC,CAAC,gBAAMC,QAAQ,CAAC,CAAC,CAAC,gLASzCG,cAAc,yBAEdD,sBAAsB,kDAI3B;AACH,CAAC","names":["useShapeUniforms","MatMulPackedProgram","aShape","bShape","outputShape","transposeA","transposeB","addBias","activation","hasPreluActivation","hasLeakyreluActivation","enableShapeUniforms","length","sharedDim","sharedDimensionPacked","Math","ceil","aSample","bSample","aSwizzle","bSwizzle","activationSnippet","applyActivationSnippet","addBiasSnippet","variableNames","push","batchASnippet","batchBSnippet","userCode"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\Toxic-Word-Checker\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\mulmat_packed_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram, useShapeUniforms} from './gpgpu_math';\n\nexport class MatMulPackedProgram implements GPGPUProgram {\n  variableNames = ['matrixA', 'matrixB'];\n  packedInputs = true;\n  packedOutput = true;\n  outputShape: number[];\n  userCode: string;\n  enableShapeUniforms: boolean;\n\n  constructor(\n      aShape: [number, number, number], bShape: [number, number, number],\n      outputShape: [number, number, number], transposeA = false,\n      transposeB = false, addBias = false, activation: string = null,\n      hasPreluActivation = false, hasLeakyreluActivation = false) {\n    this.outputShape = outputShape;\n    this.enableShapeUniforms = useShapeUniforms(this.outputShape.length);\n\n    const sharedDim = transposeA ? aShape[1] : aShape[2];\n    const sharedDimensionPacked = Math.ceil(sharedDim / 2);\n\n    const aSample = transposeA ? 'i * 2, rc.y' : 'rc.y, i * 2';\n    const bSample = transposeB ? 'rc.z, i * 2' : 'i * 2, rc.z';\n    const aSwizzle = transposeA ? ['a.xxyy', 'a.zzww'] : ['a.xxzz', 'a.yyww'];\n    const bSwizzle = transposeB ? ['b.xzxz', 'b.ywyw'] : ['b.xyxy', 'b.zwzw'];\n\n    let activationSnippet = '', applyActivationSnippet = '';\n    if (activation) {\n      if (hasPreluActivation) {\n        activationSnippet = `vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${activation}\n        }`;\n      } else if (hasLeakyreluActivation) {\n        activationSnippet = `vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${activation}\n        }`;\n      } else {\n        activationSnippet = `vec4 activation(vec4 x) {\n          ${activation}\n        }`;\n      }\n\n      applyActivationSnippet = `result = activation(result);`;\n    }\n\n    const addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n    if (addBias) {\n      this.variableNames.push('bias');\n    }\n\n    if (hasPreluActivation) {\n      this.variableNames.push('preluActivationWeights');\n    }\n\n    if (hasLeakyreluActivation) {\n      this.variableNames.push('leakyreluAlpha');\n    }\n\n    let batchASnippet = 'rc.x';\n    let batchBSnippet = 'rc.x';\n    if (aShape[0] < bShape[0]) {\n      batchASnippet = `imod(rc.x, ${aShape[0]})`;\n    } else if (bShape[0] < aShape[0]) {\n      batchBSnippet = `imod(rc.x, ${bShape[0]})`;\n    }\n\n    this.userCode = `\n      ${activationSnippet}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${sharedDimensionPacked}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${batchASnippet};\n        int batchB = ${batchBSnippet};\n        for (int i = 0; i < ${sharedDimensionPacked}; i++) {\n          vec4 a = getMatrixA(batchA, ${aSample});\n          vec4 b = getMatrixB(batchB, ${bSample});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${aSwizzle[0]} * ${bSwizzle[0]});\n          result += (${aSwizzle[1]} * ${bSwizzle[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${addBiasSnippet}\n\n        ${applyActivationSnippet}\n\n        setOutput(result);\n      }\n    `;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}