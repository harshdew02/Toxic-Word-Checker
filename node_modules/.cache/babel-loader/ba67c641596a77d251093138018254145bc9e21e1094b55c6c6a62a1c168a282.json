{"ast":null,"code":"import _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { useShapeUniforms } from './gpgpu_math';\nexport var CHECK_NAN_SNIPPET = \"\\n  if (isnan(a)) return a;\\n  if (isnan(b)) return b;\\n\";\nexport var SQUARED_DIFFERENCE = 'return (a - b) * (a - b);';\nexport var BinaryOpProgram = /*#__PURE__*/_createClass(function BinaryOpProgram(op, aShape, bShape) {\n  _classCallCheck(this, BinaryOpProgram);\n  this.variableNames = ['A', 'B'];\n  this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n  this.enableShapeUniforms = useShapeUniforms(this.outputShape.length);\n  this.userCode = \"\\n      float binaryOperation(float a, float b) {\\n        \".concat(op, \"\\n      }\\n\\n      void main() {\\n        float a = getAAtOutCoords();\\n        float b = getBAtOutCoords();\\n        setOutput(binaryOperation(a, b));\\n      }\\n    \");\n});","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,QAAO,uBAAuB;AAElD,SAAsBC,gBAAgB,QAAO,cAAc;AAE3D,OAAO,IAAMC,iBAAiB,6DAG7B;AAED,OAAO,IAAMC,kBAAkB,GAAG,2BAA2B;AAC7D,WAAaC,eAAe,6BAM1B,yBAAYC,EAAU,EAAEC,MAAgB,EAAEC,MAAgB;EAAA;EAL1D,kBAAa,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;EAMxB,IAAI,CAACC,WAAW,GAAGR,YAAY,CAACS,0BAA0B,CAACH,MAAM,EAAEC,MAAM,CAAC;EAC1E,IAAI,CAACG,mBAAmB,GAAGT,gBAAgB,CAAC,IAAI,CAACO,WAAW,CAACG,MAAM,CAAC;EACpE,IAAI,CAACC,QAAQ,wEAEPP,EAAE,2KAQP;AACH,CAAC","names":["backend_util","useShapeUniforms","CHECK_NAN_SNIPPET","SQUARED_DIFFERENCE","BinaryOpProgram","op","aShape","bShape","outputShape","assertAndGetBroadcastShape","enableShapeUniforms","length","userCode"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\binaryop_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {GPGPUProgram, useShapeUniforms} from './gpgpu_math';\n\nexport const CHECK_NAN_SNIPPET = `\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n`;\n\nexport const SQUARED_DIFFERENCE = 'return (a - b) * (a - b);';\nexport class BinaryOpProgram implements GPGPUProgram {\n  variableNames = ['A', 'B'];\n  outputShape: number[];\n  userCode: string;\n  enableShapeUniforms: boolean;\n\n  constructor(op: string, aShape: number[], bShape: number[]) {\n    this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n    this.enableShapeUniforms = useShapeUniforms(this.outputShape.length);\n    this.userCode = `\n      float binaryOperation(float a, float b) {\n        ${op}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}