{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, ScatterNd } from '@tensorflow/tfjs-core';\nimport { scatterImpl } from './Scatter_impl';\nexport function scatterNd(args) {\n  var inputs = args.inputs,\n    backend = args.backend,\n    attrs = args.attrs;\n  var indices = inputs.indices,\n    updates = inputs.updates;\n  var shape = attrs.shape;\n  var _backend_util$calcula = backend_util.calculateShapes(updates, indices, shape),\n    sliceRank = _backend_util$calcula.sliceRank,\n    numUpdates = _backend_util$calcula.numUpdates,\n    sliceSize = _backend_util$calcula.sliceSize,\n    strides = _backend_util$calcula.strides,\n    outputSize = _backend_util$calcula.outputSize;\n  var sumDupeIndices = true;\n  var indicesBuf = backend.bufferSync(indices);\n  var updatesBuf = backend.bufferSync(updates);\n  var outBuf = scatterImpl(indicesBuf, updatesBuf, shape, outputSize, sliceSize, numUpdates, sliceRank, strides, 0 /* defaultValue */, sumDupeIndices);\n  return backend.makeTensorInfo(shape, outBuf.dtype, outBuf.values);\n}\nexport var scatterNdConfig = {\n  kernelName: ScatterNd,\n  backendName: 'cpu',\n  kernelFunc: scatterNd\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,EAAkCC,SAAS,QAAoD,uBAAuB;AAG1I,SAAQC,WAAW,QAAO,gBAAgB;AAE1C,OAAM,SAAUC,SAAS,CAACC,IAIzB;EACC,IAAOC,MAAM,GAAoBD,IAAI,CAA9BC,MAAM;IAAEC,OAAO,GAAWF,IAAI,CAAtBE,OAAO;IAAEC,KAAK,GAAIH,IAAI,CAAbG,KAAK;EAC7B,IAAOC,OAAO,GAAaH,MAAM,CAA1BG,OAAO;IAAEC,OAAO,GAAIJ,MAAM,CAAjBI,OAAO;EACvB,IAAOC,KAAK,GAAIH,KAAK,CAAdG,KAAK;EAEZ,4BACIV,YAAY,CAACW,eAAe,CAACF,OAAO,EAAED,OAAO,EAAEE,KAAK,CAAC;IADlDE,SAAS,yBAATA,SAAS;IAAEC,UAAU,yBAAVA,UAAU;IAAEC,SAAS,yBAATA,SAAS;IAAEC,OAAO,yBAAPA,OAAO;IAAEC,UAAU,yBAAVA,UAAU;EAE5D,IAAMC,cAAc,GAAG,IAAI;EAE3B,IAAMC,UAAU,GAAGZ,OAAO,CAACa,UAAU,CAAgBX,OAAO,CAAC;EAC7D,IAAMY,UAAU,GAAGd,OAAO,CAACa,UAAU,CAA0BV,OAAO,CAAC;EAEvE,IAAMY,MAAM,GAAGnB,WAAW,CACtBgB,UAAU,EAAEE,UAAU,EAAEV,KAAK,EAAEM,UAAU,EAAEF,SAAS,EAAED,UAAU,EAChED,SAAS,EAAEG,OAAO,EAAE,CAAC,CAAC,oBAAoBE,cAAc,CAAC;EAE7D,OAAOX,OAAO,CAACgB,cAAc,CAACZ,KAAK,EAAEW,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACG,MAAM,CAAC;AACnE;AAEA,OAAO,IAAMC,eAAe,GAAiB;EAC3CC,UAAU,EAAEzB,SAAS;EACrB0B,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAEzB;CACb","names":["backend_util","ScatterNd","scatterImpl","scatterNd","args","inputs","backend","attrs","indices","updates","shape","calculateShapes","sliceRank","numUpdates","sliceSize","strides","outputSize","sumDupeIndices","indicesBuf","bufferSync","updatesBuf","outBuf","makeTensorInfo","dtype","values","scatterNdConfig","kernelName","backendName","kernelFunc"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-cpu\\src\\kernels\\ScatterNd.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Rank, ScatterNd, ScatterNdAttrs, ScatterNdInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {scatterImpl} from './Scatter_impl';\n\nexport function scatterNd(args: {\n  inputs: ScatterNdInputs,\n  backend: MathBackendCPU,\n  attrs: ScatterNdAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {indices, updates} = inputs;\n  const {shape} = attrs;\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      backend_util.calculateShapes(updates, indices, shape);\n  const sumDupeIndices = true;\n\n  const indicesBuf = backend.bufferSync<Rank, 'int32'>(indices);\n  const updatesBuf = backend.bufferSync<Rank, 'int32'|'float32'>(updates);\n\n  const outBuf = scatterImpl(\n      indicesBuf, updatesBuf, shape, outputSize, sliceSize, numUpdates,\n      sliceRank, strides, 0 /* defaultValue */, sumDupeIndices);\n\n  return backend.makeTensorInfo(shape, outBuf.dtype, outBuf.values);\n}\n\nexport const scatterNdConfig: KernelConfig = {\n  kernelName: ScatterNd,\n  backendName: 'cpu',\n  kernelFunc: scatterNd as unknown as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}