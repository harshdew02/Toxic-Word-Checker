{"ast":null,"code":"import _slicedToArray from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sub } from '../kernel_names';\nimport * as broadcast_util from '../ops/broadcast_util';\nimport { neg } from '../ops/neg';\nimport { reshape } from '../ops/reshape';\nimport { sum } from '../ops/sum';\nexport var subGradConfig = {\n  kernelName: Sub,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n      a = _saved[0],\n      b = _saved[1];\n    var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    var derA = function derA() {\n      var res = dy;\n      var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n      return reshape(res, a.shape);\n    };\n    var derB = function derB() {\n      var res = dy;\n      var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n      return reshape(neg(res), b.shape);\n    };\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,GAAG,QAAO,iBAAiB;AAEnC,OAAO,KAAKC,cAAc,MAAM,uBAAuB;AACvD,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,OAAO,QAAO,gBAAgB;AACtC,SAAQC,GAAG,QAAO,YAAY;AAG9B,OAAO,IAAMC,aAAa,GAAe;EACvCC,UAAU,EAAEN,GAAG;EACfO,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACxBC,QAAQ,EAAE,kBAACC,EAAU,EAAEC,KAAe,EAAI;IACxC,4BAAeA,KAAK;MAAbC,CAAC;MAAEC,CAAC;IACX,IAAMC,QAAQ,GACVZ,cAAc,CAACa,0BAA0B,CAACH,CAAC,CAACI,KAAK,EAAEH,CAAC,CAACG,KAAK,CAAC;IAE/D,IAAMC,IAAI,GAAG,SAAPA,IAAI,GAAQ;MAChB,IAAIC,GAAG,GAAGR,EAAE;MACZ,IAAMS,UAAU,GAAGjB,cAAc,CAACkB,gBAAgB,CAACR,CAAC,CAACI,KAAK,EAAEF,QAAQ,CAAC;MACrE,IAAIK,UAAU,CAACE,MAAM,GAAG,CAAC,EAAE;QACzBH,GAAG,GAAGb,GAAG,CAACa,GAAG,EAAEC,UAAU,CAAC;;MAE5B,OAAOf,OAAO,CAACc,GAAG,EAAEN,CAAC,CAACI,KAAK,CAAC;IAC9B,CAAC;IACD,IAAMM,IAAI,GAAG,SAAPA,IAAI,GAAQ;MAChB,IAAIJ,GAAG,GAAGR,EAAE;MACZ,IAAMS,UAAU,GAAGjB,cAAc,CAACkB,gBAAgB,CAACP,CAAC,CAACG,KAAK,EAAEF,QAAQ,CAAC;MACrE,IAAIK,UAAU,CAACE,MAAM,GAAG,CAAC,EAAE;QACzBH,GAAG,GAAGb,GAAG,CAACa,GAAG,EAAEC,UAAU,CAAC;;MAE5B,OAAOf,OAAO,CAACD,GAAG,CAACe,GAAG,CAAC,EAAEL,CAAC,CAACG,KAAK,CAAC;IACnC,CAAC;IAED,OAAO;MAACJ,CAAC,EAAEK,IAAI;MAAEJ,CAAC,EAAES;IAAI,CAAC;EAC3B;CACD","names":["Sub","broadcast_util","neg","reshape","sum","subGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","a","b","outShape","assertAndGetBroadcastShape","shape","derA","res","reduceAxes","getReductionAxes","length","derB"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\Toxic-Word-Checker\\node_modules\\@tensorflow\\tfjs-core\\src\\gradients\\Sub_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Sub} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport * as broadcast_util from '../ops/broadcast_util';\nimport {neg} from '../ops/neg';\nimport {reshape} from '../ops/reshape';\nimport {sum} from '../ops/sum';\nimport {Tensor} from '../tensor';\n\nexport const subGradConfig: GradConfig = {\n  kernelName: Sub,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy: Tensor, saved: Tensor[]) => {\n    const [a, b] = saved;\n    const outShape =\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n\n    const derA = () => {\n      let res = dy;\n      const reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n      return reshape(res, a.shape);\n    };\n    const derB = () => {\n      let res = dy;\n      const reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n      return reshape(neg(res), b.shape);\n    };\n\n    return {a: derA, b: derB};\n  }\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}