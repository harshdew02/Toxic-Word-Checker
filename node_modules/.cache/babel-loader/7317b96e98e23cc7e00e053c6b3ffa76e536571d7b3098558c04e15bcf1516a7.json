{"ast":null,"code":"import _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var StridedSliceProgram = /*#__PURE__*/_createClass(function StridedSliceProgram(begin, strides, size) {\n  _classCallCheck(this, StridedSliceProgram);\n  this.variableNames = ['x'];\n  this.outputShape = size;\n  var rank = size.length;\n  var inputDtype = getCoordsDataType(size.length);\n  var dtype = getCoordsDataType(size.length);\n  var newCoords = '';\n  if (rank === 1) {\n    newCoords = 'coords * strides + begin';\n  } else {\n    var outputAxis = 0;\n    newCoords = size.map(function (_, i) {\n      outputAxis++;\n      return size.length === 1 ? \"coords * strides[\".concat(i, \"] + begin[\").concat(i, \"]\") : \"coords[\".concat(outputAxis - 1, \"] * strides[\").concat(i, \"] + begin[\").concat(i, \"]\");\n    }).join(',');\n  }\n  this.userCode = \"\\n      \".concat(inputDtype, \" begin = \").concat(inputDtype, \"(\").concat(begin, \");\\n      \").concat(inputDtype, \" strides = \").concat(inputDtype, \"(\").concat(strides, \");\\n\\n      void main() {\\n        \").concat(dtype, \" coords = getOutputCoords();\\n        setOutput(getX(\").concat(newCoords, \"));\\n      }\\n    \");\n});","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;AAkBA,SAAQA,iBAAiB,QAAO,mBAAmB;AAEnD,WAAaC,mBAAmB,6BAK9B,6BAAYC,KAAe,EAAEC,OAAiB,EAAEC,IAAc;EAAA;EAJ9D,kBAAa,GAAG,CAAC,GAAG,CAAC;EAKnB,IAAI,CAACC,WAAW,GAAGD,IAAI;EACvB,IAAME,IAAI,GAAGF,IAAI,CAACG,MAAM;EACxB,IAAMC,UAAU,GAAGR,iBAAiB,CAACI,IAAI,CAACG,MAAM,CAAC;EACjD,IAAME,KAAK,GAAGT,iBAAiB,CAACI,IAAI,CAACG,MAAM,CAAC;EAE5C,IAAIG,SAAS,GAAG,EAAE;EAClB,IAAIJ,IAAI,KAAK,CAAC,EAAE;IACdI,SAAS,GAAG,0BAA0B;GACvC,MAAM;IACL,IAAIC,UAAU,GAAG,CAAC;IAClBD,SAAS,GACLN,IAAI,CAACQ,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAI;MACZH,UAAU,EAAE;MACZ,OAAOP,IAAI,CAACG,MAAM,KAAK,CAAC,8BACAO,CAAC,uBAAaA,CAAC,0BACzBH,UAAU,GAAG,CAAC,yBAAeG,CAAC,uBAAaA,CAAC,MAAG;IAC/D,CAAC,CAAC,CACDC,IAAI,CAAC,GAAG,CAAC;;EAGpB,IAAI,CAACC,QAAQ,qBACTR,UAAU,sBAAYA,UAAU,cAAIN,KAAK,uBACzCM,UAAU,wBAAcA,UAAU,cAAIL,OAAO,gDAG3CM,KAAK,kEACUC,SAAS,uBAE7B;AACH,CAAC","names":["getCoordsDataType","StridedSliceProgram","begin","strides","size","outputShape","rank","length","inputDtype","dtype","newCoords","outputAxis","map","_","i","join","userCode"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\Toxic-Word-Checker\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\strided_slice_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class StridedSliceProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(begin: number[], strides: number[], size: number[]) {\n    this.outputShape = size;\n    const rank = size.length;\n    const inputDtype = getCoordsDataType(size.length);\n    const dtype = getCoordsDataType(size.length);\n\n    let newCoords = '';\n    if (rank === 1) {\n      newCoords = 'coords * strides + begin';\n    } else {\n      let outputAxis = 0;\n      newCoords =\n          size.map((_, i) => {\n                outputAxis++;\n                return size.length === 1 ?\n                    `coords * strides[${i}] + begin[${i}]` :\n                    `coords[${outputAxis - 1}] * strides[${i}] + begin[${i}]`;\n              })\n              .join(',');\n    }\n\n    this.userCode = `\n      ${inputDtype} begin = ${inputDtype}(${begin});\n      ${inputDtype} strides = ${inputDtype}(${strides});\n\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        setOutput(getX(${newCoords}));\n      }\n    `;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}