{"ast":null,"code":"import _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/Toxic-Word-Checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n/**\n * Explicit error types.\n *\n * See the following link for more information about why the code includes\n * calls to setPrototypeOf:\n *\n * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n */\n// tslint:enable\n/**\n * Equivalent of Python's AttributeError.\n */\nexport var AttributeError = /*#__PURE__*/function (_Error) {\n  _inherits(AttributeError, _Error);\n  var _super = _createSuper(AttributeError);\n  function AttributeError(message) {\n    var _this;\n    _classCallCheck(this, AttributeError);\n    _this = _super.call(this, message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(_assertThisInitialized(_this), AttributeError.prototype);\n    return _this;\n  }\n  return _createClass(AttributeError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's RuntimeError.\n */\nexport var RuntimeError = /*#__PURE__*/function (_Error2) {\n  _inherits(RuntimeError, _Error2);\n  var _super2 = _createSuper(RuntimeError);\n  function RuntimeError(message) {\n    var _this2;\n    _classCallCheck(this, RuntimeError);\n    _this2 = _super2.call(this, message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(_assertThisInitialized(_this2), RuntimeError.prototype);\n    return _this2;\n  }\n  return _createClass(RuntimeError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's ValueError.\n */\nexport var ValueError = /*#__PURE__*/function (_Error3) {\n  _inherits(ValueError, _Error3);\n  var _super3 = _createSuper(ValueError);\n  function ValueError(message) {\n    var _this3;\n    _classCallCheck(this, ValueError);\n    _this3 = _super3.call(this, message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(_assertThisInitialized(_this3), ValueError.prototype);\n    return _this3;\n  }\n  return _createClass(ValueError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's NotImplementedError.\n */\nexport var NotImplementedError = /*#__PURE__*/function (_Error4) {\n  _inherits(NotImplementedError, _Error4);\n  var _super4 = _createSuper(NotImplementedError);\n  function NotImplementedError(message) {\n    var _this4;\n    _classCallCheck(this, NotImplementedError);\n    _this4 = _super4.call(this, message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(_assertThisInitialized(_this4), NotImplementedError.prototype);\n    return _this4;\n  }\n  return _createClass(NotImplementedError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's AssertionError.\n */\nexport var AssertionError = /*#__PURE__*/function (_Error5) {\n  _inherits(AssertionError, _Error5);\n  var _super5 = _createSuper(AssertionError);\n  function AssertionError(message) {\n    var _this5;\n    _classCallCheck(this, AssertionError);\n    _this5 = _super5.call(this, message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(_assertThisInitialized(_this5), AssertionError.prototype);\n    return _this5;\n  }\n  return _createClass(AssertionError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's IndexError.\n */\nexport var IndexError = /*#__PURE__*/function (_Error6) {\n  _inherits(IndexError, _Error6);\n  var _super6 = _createSuper(IndexError);\n  function IndexError(message) {\n    var _this6;\n    _classCallCheck(this, IndexError);\n    _this6 = _super6.call(this, message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(_assertThisInitialized(_this6), IndexError.prototype);\n    return _this6;\n  }\n  return _createClass(IndexError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));","map":{"version":3,"mappings":";;;;;;AAAA;;;;;;;;;AAUA;;;;;;;;AAQA;AAEA;;;AAGA,WAAaA,cAAe;EAAA;EAAA;EAC1B,wBAAYC,OAAgB;IAAA;IAAA;IAC1B,0BAAMA,OAAO;IACb;IACAC,MAAM,CAACC,cAAc,gCAAOH,cAAc,CAACI,SAAS,CAAC;IAAC;EACxD;EAAC;AAAA,iCALiCC,KAAK;AAQzC;;;AAGA,WAAaC,YAAa;EAAA;EAAA;EACxB,sBAAYL,OAAgB;IAAA;IAAA;IAC1B,4BAAMA,OAAO;IACb;IACAC,MAAM,CAACC,cAAc,iCAAOG,YAAY,CAACF,SAAS,CAAC;IAAC;EACtD;EAAC;AAAA,iCAL+BC,KAAK;AAQvC;;;AAGA,WAAaE,UAAW;EAAA;EAAA;EACtB,oBAAYN,OAAgB;IAAA;IAAA;IAC1B,4BAAMA,OAAO;IACb;IACAC,MAAM,CAACC,cAAc,iCAAOI,UAAU,CAACH,SAAS,CAAC;IAAC;EACpD;EAAC;AAAA,iCAL6BC,KAAK;AAQrC;;;AAGA,WAAaG,mBAAoB;EAAA;EAAA;EAC/B,6BAAYP,OAAgB;IAAA;IAAA;IAC1B,4BAAMA,OAAO;IACb;IACAC,MAAM,CAACC,cAAc,iCAAOK,mBAAmB,CAACJ,SAAS,CAAC;IAAC;EAC7D;EAAC;AAAA,iCALsCC,KAAK;AAQ9C;;;AAGA,WAAaI,cAAe;EAAA;EAAA;EAC1B,wBAAYR,OAAgB;IAAA;IAAA;IAC1B,4BAAMA,OAAO;IACb;IACAC,MAAM,CAACC,cAAc,iCAAOM,cAAc,CAACL,SAAS,CAAC;IAAC;EACxD;EAAC;AAAA,iCALiCC,KAAK;AAQzC;;;AAGA,WAAaK,UAAW;EAAA;EAAA;EACtB,oBAAYT,OAAgB;IAAA;IAAA;IAC1B,4BAAMA,OAAO;IACb;IACAC,MAAM,CAACC,cAAc,iCAAOO,UAAU,CAACN,SAAS,CAAC;IAAC;EACpD;EAAC;AAAA,iCAL6BC,KAAK","names":["AttributeError","message","Object","setPrototypeOf","prototype","Error","RuntimeError","ValueError","NotImplementedError","AssertionError","IndexError"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\Toxic-Word-Checker\\node_modules\\@tensorflow\\tfjs-layers\\src\\errors.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Explicit error types.\n *\n * See the following link for more information about why the code includes\n * calls to setPrototypeOf:\n *\n * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n */\n// tslint:enable\n\n/**\n * Equivalent of Python's AttributeError.\n */\nexport class AttributeError extends Error {\n  constructor(message?: string) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, AttributeError.prototype);\n  }\n}\n\n/**\n * Equivalent of Python's RuntimeError.\n */\nexport class RuntimeError extends Error {\n  constructor(message?: string) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, RuntimeError.prototype);\n  }\n}\n\n/**\n * Equivalent of Python's ValueError.\n */\nexport class ValueError extends Error {\n  constructor(message?: string) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, ValueError.prototype);\n  }\n}\n\n/**\n * Equivalent of Python's NotImplementedError.\n */\nexport class NotImplementedError extends Error {\n  constructor(message?: string) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, NotImplementedError.prototype);\n  }\n}\n\n/**\n * Equivalent of Python's AssertionError.\n */\nexport class AssertionError extends Error {\n  constructor(message?: string) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, AssertionError.prototype);\n  }\n}\n\n/**\n * Equivalent of Python's IndexError.\n */\nexport class IndexError extends Error {\n  constructor(message?: string) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, IndexError.prototype);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}