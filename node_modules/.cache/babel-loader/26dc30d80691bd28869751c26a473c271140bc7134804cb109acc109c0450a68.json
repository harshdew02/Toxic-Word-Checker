{"ast":null,"code":"import _createClass from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"E:/react-detect-toxicity-in-a-chat-app-youtube-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { useShapeUniforms } from './gpgpu_math';\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var CHECK_NAN_SNIPPET_PACKED = \"\\n  result.r = isNaN.r ? NAN : result.r;\\n  result.g = isNaN.g ? NAN : result.g;\\n  result.b = isNaN.b ? NAN : result.b;\\n  result.a = isNaN.a ? NAN : result.a;\\n\";\nexport var ELU_DER = \"\\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\\n\";\nexport var NOT_EQUAL = \"\\n  return vec4(notEqual(a, b));\\n\";\nexport var BinaryOpPackedProgram = /*#__PURE__*/_createClass(function BinaryOpPackedProgram(op, aShape, bShape) {\n  var checkOutOfBounds = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  _classCallCheck(this, BinaryOpPackedProgram);\n  this.variableNames = ['A', 'B'];\n  this.supportsBroadcasting = true;\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n  var rank = this.outputShape.length;\n  this.enableShapeUniforms = useShapeUniforms(rank);\n  var checkOutOfBoundsString = '';\n  if (checkOutOfBounds) {\n    if (rank === 0 || util.sizeFromShape(this.outputShape) === 1) {\n      checkOutOfBoundsString = \"\\n          result.y = 0.;\\n          result.z = 0.;\\n          result.w = 0.;\\n        \";\n    } else {\n      var dtype = getCoordsDataType(rank);\n      checkOutOfBoundsString = \"\\n          \".concat(dtype, \" coords = getOutputCoords();\\n        \");\n      if (rank === 1) {\n        if (this.enableShapeUniforms) {\n          checkOutOfBoundsString += \"\\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\\n            result.z = 0.;\\n            result.w = 0.;\\n          \";\n        } else {\n          checkOutOfBoundsString += \"\\n            result.y = (coords + 1) >= \".concat(this.outputShape[0], \" ? 0. : result.y;\\n            result.z = 0.;\\n            result.w = 0.;\\n          \");\n        }\n      } else {\n        var channels = getChannels('coords', rank);\n        if (this.enableShapeUniforms) {\n          checkOutOfBoundsString += \"\\n            bool nextRowOutOfBounds =\\n              (\".concat(channels[rank - 2], \" + 1) >= outShape[\").concat(rank, \" - 2];\\n            bool nextColOutOfBounds =\\n              (\").concat(channels[rank - 1], \" + 1) >= outShape[\").concat(rank, \" - 1];\\n            result.y = nextColOutOfBounds ? 0. : result.y;\\n            result.z = nextRowOutOfBounds ? 0. : result.z;\\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\\n          \");\n        } else {\n          checkOutOfBoundsString += \"\\n            bool nextRowOutOfBounds =\\n              (\".concat(channels[rank - 2], \" + 1) >= \").concat(this.outputShape[rank - 2], \";\\n            bool nextColOutOfBounds =\\n              (\").concat(channels[rank - 1], \" + 1) >= \").concat(this.outputShape[rank - 1], \";\\n            result.y = nextColOutOfBounds ? 0. : result.y;\\n            result.z = nextRowOutOfBounds ? 0. : result.z;\\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\\n          \");\n        }\n      }\n    }\n  }\n  this.userCode = \"\\n      vec4 binaryOperation(vec4 a, vec4 b) {\\n        \".concat(op, \"\\n      }\\n\\n      void main() {\\n        vec4 a = getAAtOutCoords();\\n        vec4 b = getBAtOutCoords();\\n\\n        vec4 result = binaryOperation(a, b);\\n        \").concat(checkOutOfBoundsString, \"\\n\\n        setOutput(result);\\n      }\\n    \");\n});","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,EAAEC,IAAI,QAAO,uBAAuB;AAExD,SAAsBC,gBAAgB,QAAO,cAAc;AAC3D,SAAQC,WAAW,QAAO,gBAAgB;AAC1C,SAAQC,iBAAiB,QAAO,mBAAmB;AAEnD,OAAO,IAAMC,wBAAwB,uKAKpC;AAED,OAAO,IAAMC,OAAO,4IAGnB;AAED,OAAO,IAAMC,SAAS,uCAErB;AAED,WAAaC,qBAAqB,6BAShC,+BACIC,EAAU,EAAEC,MAAgB,EAAEC,MAAgB,EACtB;EAAA,IAAxBC,gBAAgB,uEAAG,KAAK;EAAA;EAV5B,kBAAa,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;EAG1B,yBAAoB,GAAG,IAAI;EAC3B,iBAAY,GAAG,IAAI;EACnB,iBAAY,GAAG,IAAI;EAMjB,IAAI,CAACC,WAAW,GAAGb,YAAY,CAACc,0BAA0B,CAACJ,MAAM,EAAEC,MAAM,CAAC;EAC1E,IAAMI,IAAI,GAAG,IAAI,CAACF,WAAW,CAACG,MAAM;EACpC,IAAI,CAACC,mBAAmB,GAAGf,gBAAgB,CAACa,IAAI,CAAC;EACjD,IAAIG,sBAAsB,GAAG,EAAE;EAC/B,IAAIN,gBAAgB,EAAE;IACpB,IAAIG,IAAI,KAAK,CAAC,IAAId,IAAI,CAACkB,aAAa,CAAC,IAAI,CAACN,WAAW,CAAC,KAAK,CAAC,EAAE;MAC5DK,sBAAsB,6FAIrB;KACF,MAAM;MACL,IAAME,KAAK,GAAGhB,iBAAiB,CAACW,IAAI,CAAC;MACrCG,sBAAsB,yBAClBE,KAAK,2CACR;MACD,IAAIL,IAAI,KAAK,CAAC,EAAE;QACd,IAAI,IAAI,CAACE,mBAAmB,EAAE;UAC5BC,sBAAsB,4IAIvB;SACA,MAAM;UACLA,sBAAsB,uDACO,IAAI,CAACL,WAAW,CAAC,CAAC,CAAC,0FAGjD;;OAEF,MAAM;QACL,IAAMQ,QAAQ,GAAGlB,WAAW,CAAC,QAAQ,EAAEY,IAAI,CAAC;QAC5C,IAAI,IAAI,CAACE,mBAAmB,EAAE;UAC5BC,sBAAsB,sEAEjBG,QAAQ,CAACN,IAAI,GAAG,CAAC,CAAC,+BAAqBA,IAAI,2EAE3CM,QAAQ,CAACN,IAAI,GAAG,CAAC,CAAC,+BAAqBA,IAAI,iOAIjD;SACA,MAAM;UACLG,sBAAsB,sEAEjBG,QAAQ,CAACN,IAAI,GAAG,CAAC,CAAC,sBAAY,IAAI,CAACF,WAAW,CAACE,IAAI,GAAG,CAAC,CAAC,sEAExDM,QAAQ,CAACN,IAAI,GAAG,CAAC,CAAC,sBAAY,IAAI,CAACF,WAAW,CAACE,IAAI,GAAG,CAAC,CAAC,4NAI9D;;;;;EAMP,IAAI,CAACO,QAAQ,qEAEPb,EAAE,iLAQFS,sBAAsB,kDAI3B;AACH,CAAC","names":["backend_util","util","useShapeUniforms","getChannels","getCoordsDataType","CHECK_NAN_SNIPPET_PACKED","ELU_DER","NOT_EQUAL","BinaryOpPackedProgram","op","aShape","bShape","checkOutOfBounds","outputShape","assertAndGetBroadcastShape","rank","length","enableShapeUniforms","checkOutOfBoundsString","sizeFromShape","dtype","channels","userCode"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\binaryop_packed_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, util} from '@tensorflow/tfjs-core';\n\nimport {GPGPUProgram, useShapeUniforms} from './gpgpu_math';\nimport {getChannels} from './packing_util';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport const CHECK_NAN_SNIPPET_PACKED = `\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n`;\n\nexport const ELU_DER = `\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n`;\n\nexport const NOT_EQUAL = `\n  return vec4(notEqual(a, b));\n`;\n\nexport class BinaryOpPackedProgram implements GPGPUProgram {\n  variableNames = ['A', 'B'];\n  outputShape: number[];\n  userCode: string;\n  supportsBroadcasting = true;\n  packedInputs = true;\n  packedOutput = true;\n  enableShapeUniforms: boolean;\n\n  constructor(\n      op: string, aShape: number[], bShape: number[],\n      checkOutOfBounds = false) {\n    this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n    const rank = this.outputShape.length;\n    this.enableShapeUniforms = useShapeUniforms(rank);\n    let checkOutOfBoundsString = '';\n    if (checkOutOfBounds) {\n      if (rank === 0 || util.sizeFromShape(this.outputShape) === 1) {\n        checkOutOfBoundsString = `\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        `;\n      } else {\n        const dtype = getCoordsDataType(rank);\n        checkOutOfBoundsString = `\n          ${dtype} coords = getOutputCoords();\n        `;\n        if (rank === 1) {\n          if (this.enableShapeUniforms) {\n            checkOutOfBoundsString += `\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;\n          } else {\n            checkOutOfBoundsString += `\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;\n          }\n        } else {\n          const channels = getChannels('coords', rank);\n          if (this.enableShapeUniforms) {\n            checkOutOfBoundsString += `\n            bool nextRowOutOfBounds =\n              (${channels[rank - 2]} + 1) >= outShape[${rank} - 2];\n            bool nextColOutOfBounds =\n              (${channels[rank - 1]} + 1) >= outShape[${rank} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `;\n          } else {\n            checkOutOfBoundsString += `\n            bool nextRowOutOfBounds =\n              (${channels[rank - 2]} + 1) >= ${this.outputShape[rank - 2]};\n            bool nextColOutOfBounds =\n              (${channels[rank - 1]} + 1) >= ${this.outputShape[rank - 1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `;\n          }\n        }\n      }\n    }\n\n    this.userCode = `\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${op}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${checkOutOfBoundsString}\n\n        setOutput(result);\n      }\n    `;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}