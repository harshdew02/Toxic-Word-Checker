{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DepthToSpace } from '@tensorflow/tfjs-core';\nimport { DepthToSpaceProgram } from '../depth_to_space_gpu';\nexport function depthToSpace(args) {\n  var inputs = args.inputs,\n    backend = args.backend,\n    attrs = args.attrs;\n  var x = inputs.x;\n  var blockSize = attrs.blockSize,\n    dataFormat = attrs.dataFormat;\n  var batchSize = x.shape[0];\n  var inputHeight = dataFormat === 'NHWC' ? x.shape[1] : x.shape[2];\n  var inputWidth = dataFormat === 'NHWC' ? x.shape[2] : x.shape[3];\n  var inputDepth = dataFormat === 'NHWC' ? x.shape[3] : x.shape[1];\n  var outputHeight = inputHeight * blockSize;\n  var outputWidth = inputWidth * blockSize;\n  var outputDepth = inputDepth / (blockSize * blockSize);\n  var outputShape = dataFormat === 'NHWC' ? [batchSize, outputHeight, outputWidth, outputDepth] : [batchSize, outputDepth, outputHeight, outputWidth];\n  var program = new DepthToSpaceProgram(outputShape, blockSize, dataFormat);\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport var depthToSpaceConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'webgl',\n  kernelFunc: depthToSpace\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,QAAoF,uBAAuB;AAG/H,SAAQC,mBAAmB,QAAO,uBAAuB;AAEzD,OAAM,SAAUC,YAAY,CAACC,IAI5B;EACC,IAAOC,MAAM,GAAoBD,IAAI,CAA9BC,MAAM;IAAEC,OAAO,GAAWF,IAAI,CAAtBE,OAAO;IAAEC,KAAK,GAAIH,IAAI,CAAbG,KAAK;EAC7B,IAAOC,CAAC,GAAIH,MAAM,CAAXG,CAAC;EACR,IAAOC,SAAS,GAAgBF,KAAK,CAA9BE,SAAS;IAAEC,UAAU,GAAIH,KAAK,CAAnBG,UAAU;EAE5B,IAAMC,SAAS,GAAGH,CAAC,CAACI,KAAK,CAAC,CAAC,CAAC;EAC5B,IAAMC,WAAW,GAAIH,UAAU,KAAK,MAAM,GAAIF,CAAC,CAACI,KAAK,CAAC,CAAC,CAAC,GAAGJ,CAAC,CAACI,KAAK,CAAC,CAAC,CAAC;EACrE,IAAME,UAAU,GAAIJ,UAAU,KAAK,MAAM,GAAIF,CAAC,CAACI,KAAK,CAAC,CAAC,CAAC,GAAGJ,CAAC,CAACI,KAAK,CAAC,CAAC,CAAC;EACpE,IAAMG,UAAU,GAAIL,UAAU,KAAK,MAAM,GAAIF,CAAC,CAACI,KAAK,CAAC,CAAC,CAAC,GAAGJ,CAAC,CAACI,KAAK,CAAC,CAAC,CAAC;EAEpE,IAAMI,YAAY,GAAGH,WAAW,GAAGJ,SAAS;EAC5C,IAAMQ,WAAW,GAAGH,UAAU,GAAGL,SAAS;EAC1C,IAAMS,WAAW,GAAGH,UAAU,IAAIN,SAAS,GAAGA,SAAS,CAAC;EAExD,IAAMU,WAAW,GAAIT,UAAU,KAAK,MAAM,GACtC,CAACC,SAAS,EAAEK,YAAY,EAAEC,WAAW,EAAEC,WAAW,CAAC,GACnD,CAACP,SAAS,EAAEO,WAAW,EAAEF,YAAY,EAAEC,WAAW,CAAC;EAEvD,IAAMG,OAAO,GAAG,IAAIlB,mBAAmB,CAACiB,WAAW,EAAEV,SAAS,EAAEC,UAAU,CAAC;EAC3E,OAAOJ,OAAO,CAACe,eAAe,CAACD,OAAO,EAAE,CAACZ,CAAC,CAAC,EAAEA,CAAC,CAACc,KAAK,CAAC;AACvD;AAEA,OAAO,IAAMC,kBAAkB,GAAiB;EAC9CC,UAAU,EAAEvB,YAAY;EACxBwB,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAEvB;CACb","names":["DepthToSpace","DepthToSpaceProgram","depthToSpace","args","inputs","backend","attrs","x","blockSize","dataFormat","batchSize","shape","inputHeight","inputWidth","inputDepth","outputHeight","outputWidth","outputDepth","outputShape","program","runWebGLProgram","dtype","depthToSpaceConfig","kernelName","backendName","kernelFunc"],"sources":["E:\\react-detect-toxicity-in-a-chat-app-youtube-2\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\kernels\\DepthToSpace.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DepthToSpace, DepthToSpaceAttrs, DepthToSpaceInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {DepthToSpaceProgram} from '../depth_to_space_gpu';\n\nexport function depthToSpace(args: {\n  inputs: DepthToSpaceInputs,\n  backend: MathBackendWebGL,\n  attrs: DepthToSpaceAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockSize, dataFormat} = attrs;\n\n  const batchSize = x.shape[0];\n  const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n  const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n  const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n\n  const outputHeight = inputHeight * blockSize;\n  const outputWidth = inputWidth * blockSize;\n  const outputDepth = inputDepth / (blockSize * blockSize);\n\n  const outputShape = (dataFormat === 'NHWC') ?\n      [batchSize, outputHeight, outputWidth, outputDepth] :\n      [batchSize, outputDepth, outputHeight, outputWidth];\n\n  const program = new DepthToSpaceProgram(outputShape, blockSize, dataFormat);\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}\n\nexport const depthToSpaceConfig: KernelConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'webgl',\n  kernelFunc: depthToSpace as unknown as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}